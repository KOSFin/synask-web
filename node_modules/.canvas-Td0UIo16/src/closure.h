// Copyright (c) 2010 LearnBoost <tj@learnboost.com>

#pragma once

#include "Canvas.h"

#ifdef HAVE_JPEG
#include <jpeglib.h>
#endif

#include <nan.h>
#include <png.h>
#include <stdint.h> // node < 7 uses libstdc++ on macOS which lacks complete c++11
#include <vector>

#ifndef PAGE_SIZE
  #define PAGE_SIZE 4096
#endif

/*
 * Image encoding closures.
 */

struct Closure {
  std::vector<uint8_t> vec;
  Nan::Callback cb;
  Canvas* canvas = nullptr;
  cairo_status_t status = CAIRO_STATUS_SUCCESS;

  static cairo_status_t writeVec(void *c, const uint8_t *odata, unsigned len) {
    Closure* closure = static_cast<Closure*>(c);
    try {
      closure->vec.insert(closure->vec.end(), odata, odata + len);
    } catch (const std::ba