{"ast":null,"code":"import './../lib/@vkontakte/vkjs/lib/es6/detections.js';\nimport { querystring } from './../lib/@vkontakte/vkjs/lib/es6/querystring.js';\nimport { AuthStatsCollector } from './analytics/AuthStatsCollector.js';\nimport { AuthDataService } from './authDataService.js';\nimport '../core/config/config.js';\nimport { Prompt, ConfigAuthMode } from '../core/config/types.js';\nimport { state, clearStateCookie, codeVerifier, clearCodeVerifierCookie } from '../utils/cookie.js';\nimport { isDomainAllowed } from '../utils/domain.js';\nimport { generateCodeChallenge } from '../utils/oauth.js';\nimport { encodeStatsInfo, getVKIDUrl, getRedirectWithPayloadUrl } from '../utils/url/url.js';\nimport { uuid } from '../utils/uuid.js';\nimport '../widgets/oauthList/oauthList.js';\nimport { ExternalOAuthName } from '../widgets/oauthList/types.js';\nimport { OAUTH2_RESPONSE, OAUTH2_RESPONSE_TYPE, AUTH_ERROR_TEXT } from './constants.js';\nimport { AuthStatsFlowSource, AuthErrorCode } from './types.js';\nconst CODE_CHALLENGE_METHOD = 's256';\nclass Auth {\n  /**\n  * @ignore\n  */\n  static config;\n  dataService;\n  opener;\n  interval;\n  id = uuid();\n  analytics;\n  constructor() {\n    this.analytics = new AuthStatsCollector(Auth.config);\n  }\n  close = () => {\n    this.opener && this.opener.close();\n  };\n  handleMessage = ({\n    origin,\n    source,\n    data\n  }) => {\n    if (source !== this.opener || !this.opener || !isDomainAllowed(origin)) {\n      return;\n    }\n    this.unsubscribe();\n    if (data.payload.error) {\n      this.dataService.sendAuthorizationFailed(data.payload.error);\n      return;\n    }\n    // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n    if (data.action === OAUTH2_RESPONSE + state()) {\n      if (state() !== data.payload.state) {\n        this.dataService.sendStateMismatchError();\n      } else {\n        this.dataService.sendSuccessData(data.payload);\n      }\n      return;\n    }\n    this.dataService.sendEventNotSupported();\n  };\n  handleInterval = () => {\n    if (this.opener?.closed) {\n      this.unsubscribe();\n      this.dataService.sendNewTabHasBeenClosed();\n    }\n  };\n  subscribe = () => {\n    this.interval = window.setInterval(this.handleInterval, 1000);\n    window.addEventListener('message', this.handleMessage);\n    this.dataService.removeCallback();\n  };\n  unsubscribe = () => {\n    window.removeEventListener('message', this.handleMessage);\n    clearInterval(this.interval);\n    this.dataService.setCallback(this.close);\n  };\n  loginInNewTab = url => {\n    this.dataService = new AuthDataService();\n    this.opener = window.open(url, '_blank');\n    if (this.opener) {\n      this.subscribe();\n    } else {\n      this.dataService.sendCannotCreateNewTab();\n    }\n    return this.dataService.value.then(payload => {\n      // Сбрасываем после проверки\n      clearStateCookie();\n      Auth.config.update({\n        state: Auth.config.get().state\n      });\n      this.redirectWithPayload(payload);\n    });\n  };\n  loginByRedirect = url => {\n    location.assign(url);\n    return Promise.resolve();\n  };\n  login = params => {\n    const config = Auth.config.get();\n    const {\n      scope,\n      app,\n      codeChallenge,\n      prompt\n    } = config;\n    const flowSource = params?.statsFlowSource || AuthStatsFlowSource.AUTH;\n    const sessionId = params?.uniqueSessionId || this.id;\n    if (flowSource === AuthStatsFlowSource.AUTH) {\n      this.analytics.setUniqueSessionId(sessionId);\n    }\n    codeVerifier(config.codeVerifier);\n    state(config.state);\n    const authorizePrompt = [...prompt];\n    // Если открыто из 3-в-1, добавляем login в начало\n    const hasProvider = Object.values(ExternalOAuthName).includes(params?.provider);\n    if (hasProvider) {\n      authorizePrompt.unshift(Prompt.Login);\n    }\n    const queryParams = {\n      lang_id: params?.lang,\n      scheme: params?.scheme,\n      code_challenge: codeChallenge || generateCodeChallenge(codeVerifier()),\n      code_challenge_method: CODE_CHALLENGE_METHOD,\n      client_id: app,\n      response_type: OAUTH2_RESPONSE_TYPE,\n      scope,\n      state: state(),\n      provider: params?.provider,\n      prompt: authorizePrompt.join(' ').trim(),\n      stats_info: encodeStatsInfo({\n        flow_source: flowSource,\n        session_id: sessionId\n      })\n    };\n    let url = getVKIDUrl('authorize', queryParams, config);\n    if (params?.screen) {\n      Object.assign(queryParams, {\n        oauth_version: 2,\n        screen: params?.screen,\n        redirect_state: state()\n      });\n      url = getVKIDUrl('auth', queryParams, config);\n    }\n    if (config.mode === ConfigAuthMode.InNewTab) {\n      if (flowSource === AuthStatsFlowSource.AUTH) {\n        void this.analytics.sendCustomAuthStart(params?.provider);\n      }\n      queryParams.origin = location.protocol + '//' + location.hostname;\n      return this.loginInNewTab(url);\n    } else {\n      if (flowSource === AuthStatsFlowSource.AUTH) {\n        return this.analytics.sendCustomAuthStart(params?.provider).finally(() => {\n          void this.loginByRedirect(url);\n        });\n      }\n      return this.loginByRedirect(url);\n    }\n  };\n  checkState(stateToCheck) {\n    if (state() !== stateToCheck) {\n      return {\n        code: AuthErrorCode.StateMismatch,\n        error: AUTH_ERROR_TEXT[AuthErrorCode.StateMismatch],\n        state: stateToCheck\n      };\n    }\n    clearStateCookie();\n  }\n  exchangeCode(code, deviceId) {\n    const config = Auth.config.get();\n    state(config.state);\n    const queryParams = {\n      grant_type: 'authorization_code',\n      redirect_uri: config.redirectUrl,\n      client_id: config.app,\n      code_verifier: codeVerifier(),\n      state: state(),\n      device_id: deviceId\n    };\n    const queryParamsString = querystring.stringify(queryParams);\n    return fetch(`https://${config.__vkidDomain}/oauth2/auth?${queryParamsString}`, {\n      method: 'POST',\n      body: new URLSearchParams({\n        code\n      })\n    }).then(res => this.oauthSectionFetchHandler(res)).then(res => {\n      const checkStateError = this.checkState(res.state);\n      if (checkStateError) {\n        throw checkStateError;\n      }\n      // Сбрасываем динамические параметры после обмена кода\n      clearCodeVerifierCookie();\n      Auth.config.update({\n        state: config.state,\n        codeVerifier: config.codeVerifier\n      });\n      return res;\n    });\n  }\n  refreshToken(refreshToken, deviceId) {\n    const config = Auth.config.get();\n    state(config.state);\n    const queryParams = {\n      grant_type: 'refresh_token',\n      redirect_uri: config.redirectUrl,\n      client_id: config.app,\n      device_id: deviceId,\n      state: state()\n    };\n    const queryParamsString = querystring.stringify(queryParams);\n    return fetch(`https://${config.__vkidDomain}/oauth2/auth?${queryParamsString}`, {\n      method: 'POST',\n      body: new URLSearchParams({\n        refresh_token: refreshToken\n      })\n    }).then(res => this.oauthSectionFetchHandler(res)).then(res => {\n      const checkStateError = this.checkState(res.state);\n      if (checkStateError) {\n        throw checkStateError;\n      }\n      Auth.config.update({\n        state: config.state\n      });\n      return res;\n    });\n  }\n  logout(accessToken) {\n    const config = Auth.config.get();\n    const queryParams = {\n      client_id: config.app\n    };\n    const queryParamsString = querystring.stringify(queryParams);\n    return fetch(`https://${config.__vkidDomain}/oauth2/logout?${queryParamsString}`, {\n      method: 'POST',\n      body: new URLSearchParams({\n        access_token: accessToken\n      })\n    }).then(res => this.oauthSectionFetchHandler(res));\n  }\n  userInfo(accessToken) {\n    const config = Auth.config.get();\n    const queryParams = {\n      client_id: config.app\n    };\n    const queryParamsString = querystring.stringify(queryParams);\n    return fetch(`https://${config.__vkidDomain}/oauth2/user_info?${queryParamsString}`, {\n      method: 'POST',\n      body: new URLSearchParams({\n        access_token: accessToken\n      })\n    }).then(res => this.oauthSectionFetchHandler(res));\n  }\n  publicInfo(idToken) {\n    const config = Auth.config.get();\n    const queryParams = {\n      client_id: config.app\n    };\n    const queryParamsString = querystring.stringify(queryParams);\n    return fetch(`https://${config.__vkidDomain}/oauth2/public_info?${queryParamsString}`, {\n      method: 'POST',\n      body: new URLSearchParams({\n        id_token: idToken\n      })\n    }).then(res => this.oauthSectionFetchHandler(res));\n  }\n  oauthSectionFetchHandler(res) {\n    return res.json().then(resJson => {\n      if ('error' in resJson) {\n        throw resJson;\n      }\n      return resJson;\n    });\n  }\n  redirectWithPayload(payload) {\n    location.assign(getRedirectWithPayloadUrl(payload, Auth.config));\n  }\n}\nexport { Auth };","map":{"version":3,"names":["querystring","AuthStatsCollector","AuthDataService","Prompt","ConfigAuthMode","state","clearStateCookie","codeVerifier","clearCodeVerifierCookie","isDomainAllowed","generateCodeChallenge","encodeStatsInfo","getVKIDUrl","getRedirectWithPayloadUrl","uuid","ExternalOAuthName","OAUTH2_RESPONSE","OAUTH2_RESPONSE_TYPE","AUTH_ERROR_TEXT","AuthStatsFlowSource","AuthErrorCode","CODE_CHALLENGE_METHOD","Auth","config","dataService","opener","interval","id","analytics","constructor","close","handleMessage","origin","source","data","unsubscribe","payload","error","sendAuthorizationFailed","action","sendStateMismatchError","sendSuccessData","sendEventNotSupported","handleInterval","closed","sendNewTabHasBeenClosed","subscribe","window","setInterval","addEventListener","removeCallback","removeEventListener","clearInterval","setCallback","loginInNewTab","url","open","sendCannotCreateNewTab","value","then","update","get","redirectWithPayload","loginByRedirect","location","assign","Promise","resolve","login","params","scope","app","codeChallenge","prompt","flowSource","statsFlowSource","AUTH","sessionId","uniqueSessionId","setUniqueSessionId","authorizePrompt","hasProvider","Object","values","includes","provider","unshift","Login","queryParams","lang_id","lang","scheme","code_challenge","code_challenge_method","client_id","response_type","join","trim","stats_info","flow_source","session_id","screen","oauth_version","redirect_state","mode","InNewTab","sendCustomAuthStart","protocol","hostname","finally","checkState","stateToCheck","code","StateMismatch","exchangeCode","deviceId","grant_type","redirect_uri","redirectUrl","code_verifier","device_id","queryParamsString","stringify","fetch","__vkidDomain","method","body","URLSearchParams","res","oauthSectionFetchHandler","checkStateError","refreshToken","refresh_token","logout","accessToken","access_token","userInfo","publicInfo","idToken","id_token","json","resJson"],"sources":["C:/Users/player/Documents/GitHub/synask-app/node_modules/@vkid/sdk/dist-sdk/esm/auth/auth.js"],"sourcesContent":["import './../lib/@vkontakte/vkjs/lib/es6/detections.js';\nimport { querystring } from './../lib/@vkontakte/vkjs/lib/es6/querystring.js';\nimport { AuthStatsCollector } from './analytics/AuthStatsCollector.js';\nimport { AuthDataService } from './authDataService.js';\nimport '../core/config/config.js';\nimport { Prompt, ConfigAuthMode } from '../core/config/types.js';\nimport { state, clearStateCookie, codeVerifier, clearCodeVerifierCookie } from '../utils/cookie.js';\nimport { isDomainAllowed } from '../utils/domain.js';\nimport { generateCodeChallenge } from '../utils/oauth.js';\nimport { encodeStatsInfo, getVKIDUrl, getRedirectWithPayloadUrl } from '../utils/url/url.js';\nimport { uuid } from '../utils/uuid.js';\nimport '../widgets/oauthList/oauthList.js';\nimport { ExternalOAuthName } from '../widgets/oauthList/types.js';\nimport { OAUTH2_RESPONSE, OAUTH2_RESPONSE_TYPE, AUTH_ERROR_TEXT } from './constants.js';\nimport { AuthStatsFlowSource, AuthErrorCode } from './types.js';\n\nconst CODE_CHALLENGE_METHOD = 's256';\nclass Auth {\n    /**\n   * @ignore\n   */ static config;\n    dataService;\n    opener;\n    interval;\n    id = uuid();\n    analytics;\n    constructor(){\n        this.analytics = new AuthStatsCollector(Auth.config);\n    }\n    close = ()=>{\n        this.opener && this.opener.close();\n    };\n    handleMessage = ({ origin, source, data })=>{\n        if (source !== this.opener || !this.opener || !isDomainAllowed(origin)) {\n            return;\n        }\n        this.unsubscribe();\n        if (data.payload.error) {\n            this.dataService.sendAuthorizationFailed(data.payload.error);\n            return;\n        }\n        // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n        if (data.action === OAUTH2_RESPONSE + state()) {\n            if (state() !== data.payload.state) {\n                this.dataService.sendStateMismatchError();\n            } else {\n                this.dataService.sendSuccessData(data.payload);\n            }\n            return;\n        }\n        this.dataService.sendEventNotSupported();\n    };\n    handleInterval = ()=>{\n        if (this.opener?.closed) {\n            this.unsubscribe();\n            this.dataService.sendNewTabHasBeenClosed();\n        }\n    };\n    subscribe = ()=>{\n        this.interval = window.setInterval(this.handleInterval, 1000);\n        window.addEventListener('message', this.handleMessage);\n        this.dataService.removeCallback();\n    };\n    unsubscribe = ()=>{\n        window.removeEventListener('message', this.handleMessage);\n        clearInterval(this.interval);\n        this.dataService.setCallback(this.close);\n    };\n    loginInNewTab = (url)=>{\n        this.dataService = new AuthDataService();\n        this.opener = window.open(url, '_blank');\n        if (this.opener) {\n            this.subscribe();\n        } else {\n            this.dataService.sendCannotCreateNewTab();\n        }\n        return this.dataService.value.then((payload)=>{\n            // Сбрасываем после проверки\n            clearStateCookie();\n            Auth.config.update({\n                state: Auth.config.get().state\n            });\n            this.redirectWithPayload(payload);\n        });\n    };\n    loginByRedirect = (url)=>{\n        location.assign(url);\n        return Promise.resolve();\n    };\n    login = (params)=>{\n        const config = Auth.config.get();\n        const { scope, app, codeChallenge, prompt } = config;\n        const flowSource = params?.statsFlowSource || AuthStatsFlowSource.AUTH;\n        const sessionId = params?.uniqueSessionId || this.id;\n        if (flowSource === AuthStatsFlowSource.AUTH) {\n            this.analytics.setUniqueSessionId(sessionId);\n        }\n        codeVerifier(config.codeVerifier);\n        state(config.state);\n        const authorizePrompt = [\n            ...prompt\n        ];\n        // Если открыто из 3-в-1, добавляем login в начало\n        const hasProvider = Object.values(ExternalOAuthName).includes(params?.provider);\n        if (hasProvider) {\n            authorizePrompt.unshift(Prompt.Login);\n        }\n        const queryParams = {\n            lang_id: params?.lang,\n            scheme: params?.scheme,\n            code_challenge: codeChallenge || generateCodeChallenge(codeVerifier()),\n            code_challenge_method: CODE_CHALLENGE_METHOD,\n            client_id: app,\n            response_type: OAUTH2_RESPONSE_TYPE,\n            scope,\n            state: state(),\n            provider: params?.provider,\n            prompt: authorizePrompt.join(' ').trim(),\n            stats_info: encodeStatsInfo({\n                flow_source: flowSource,\n                session_id: sessionId\n            })\n        };\n        let url = getVKIDUrl('authorize', queryParams, config);\n        if (params?.screen) {\n            Object.assign(queryParams, {\n                oauth_version: 2,\n                screen: params?.screen,\n                redirect_state: state()\n            });\n            url = getVKIDUrl('auth', queryParams, config);\n        }\n        if (config.mode === ConfigAuthMode.InNewTab) {\n            if (flowSource === AuthStatsFlowSource.AUTH) {\n                void this.analytics.sendCustomAuthStart(params?.provider);\n            }\n            queryParams.origin = location.protocol + '//' + location.hostname;\n            return this.loginInNewTab(url);\n        } else {\n            if (flowSource === AuthStatsFlowSource.AUTH) {\n                return this.analytics.sendCustomAuthStart(params?.provider).finally(()=>{\n                    void this.loginByRedirect(url);\n                });\n            }\n            return this.loginByRedirect(url);\n        }\n    };\n    checkState(stateToCheck) {\n        if (state() !== stateToCheck) {\n            return {\n                code: AuthErrorCode.StateMismatch,\n                error: AUTH_ERROR_TEXT[AuthErrorCode.StateMismatch],\n                state: stateToCheck\n            };\n        }\n        clearStateCookie();\n    }\n    exchangeCode(code, deviceId) {\n        const config = Auth.config.get();\n        state(config.state);\n        const queryParams = {\n            grant_type: 'authorization_code',\n            redirect_uri: config.redirectUrl,\n            client_id: config.app,\n            code_verifier: codeVerifier(),\n            state: state(),\n            device_id: deviceId\n        };\n        const queryParamsString = querystring.stringify(queryParams);\n        return fetch(`https://${config.__vkidDomain}/oauth2/auth?${queryParamsString}`, {\n            method: 'POST',\n            body: new URLSearchParams({\n                code\n            })\n        }).then((res)=>this.oauthSectionFetchHandler(res)).then((res)=>{\n            const checkStateError = this.checkState(res.state);\n            if (checkStateError) {\n                throw checkStateError;\n            }\n            // Сбрасываем динамические параметры после обмена кода\n            clearCodeVerifierCookie();\n            Auth.config.update({\n                state: config.state,\n                codeVerifier: config.codeVerifier\n            });\n            return res;\n        });\n    }\n    refreshToken(refreshToken, deviceId) {\n        const config = Auth.config.get();\n        state(config.state);\n        const queryParams = {\n            grant_type: 'refresh_token',\n            redirect_uri: config.redirectUrl,\n            client_id: config.app,\n            device_id: deviceId,\n            state: state()\n        };\n        const queryParamsString = querystring.stringify(queryParams);\n        return fetch(`https://${config.__vkidDomain}/oauth2/auth?${queryParamsString}`, {\n            method: 'POST',\n            body: new URLSearchParams({\n                refresh_token: refreshToken\n            })\n        }).then((res)=>this.oauthSectionFetchHandler(res)).then((res)=>{\n            const checkStateError = this.checkState(res.state);\n            if (checkStateError) {\n                throw checkStateError;\n            }\n            Auth.config.update({\n                state: config.state\n            });\n            return res;\n        });\n    }\n    logout(accessToken) {\n        const config = Auth.config.get();\n        const queryParams = {\n            client_id: config.app\n        };\n        const queryParamsString = querystring.stringify(queryParams);\n        return fetch(`https://${config.__vkidDomain}/oauth2/logout?${queryParamsString}`, {\n            method: 'POST',\n            body: new URLSearchParams({\n                access_token: accessToken\n            })\n        }).then((res)=>this.oauthSectionFetchHandler(res));\n    }\n    userInfo(accessToken) {\n        const config = Auth.config.get();\n        const queryParams = {\n            client_id: config.app\n        };\n        const queryParamsString = querystring.stringify(queryParams);\n        return fetch(`https://${config.__vkidDomain}/oauth2/user_info?${queryParamsString}`, {\n            method: 'POST',\n            body: new URLSearchParams({\n                access_token: accessToken\n            })\n        }).then((res)=>this.oauthSectionFetchHandler(res));\n    }\n    publicInfo(idToken) {\n        const config = Auth.config.get();\n        const queryParams = {\n            client_id: config.app\n        };\n        const queryParamsString = querystring.stringify(queryParams);\n        return fetch(`https://${config.__vkidDomain}/oauth2/public_info?${queryParamsString}`, {\n            method: 'POST',\n            body: new URLSearchParams({\n                id_token: idToken\n            })\n        }).then((res)=>this.oauthSectionFetchHandler(res));\n    }\n    oauthSectionFetchHandler(res) {\n        return res.json().then((resJson)=>{\n            if ('error' in resJson) {\n                throw resJson;\n            }\n            return resJson;\n        });\n    }\n    redirectWithPayload(payload) {\n        location.assign(getRedirectWithPayloadUrl(payload, Auth.config));\n    }\n}\n\nexport { Auth };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}