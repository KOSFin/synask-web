{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\player\\\\Documents\\\\GitHub\\\\synask-app\\\\src\\\\components\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { createClient } from '@supabase/supabase-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst supabase = createClient('https://cnicyffiqvdhgyzkogtl.supabase.co', 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImNuaWN5ZmZpcXZkaGd5emtvZ3RsIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MDc3NDM2NzcsImV4cCI6MjAyMzMxOTY3N30.bZoapdV-TJiq42uJaOPGBfPz91ULReQ1_ahXpUHNaJ8');\nconst ProtectedRoute = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const redirectTo = url => {\n    window.location.href = url;\n    return null; // Для React Router, чтобы не рендерить ничего\n  };\n  useEffect(() => {\n    const checkSession = async () => {\n      try {\n        const {\n          data,\n          error\n        } = await supabase.auth.getSession();\n        if (error) throw error;\n        setIsAuthenticated(data.session ? true : false);\n      } catch (error) {\n        setIsAuthenticated(false);\n      } finally {\n        setLoading(false);\n      }\n    };\n    checkSession();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 16\n    }, this); // Индикатор загрузки\n  }\n  return isAuthenticated ? children : redirectTo(\"/login.html\");\n};\n_s(ProtectedRoute, \"Im6XNksQ2UaiADl4fBdvs+sWG3E=\");\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","createClient","jsxDEV","_jsxDEV","supabase","ProtectedRoute","children","_s","isAuthenticated","setIsAuthenticated","loading","setLoading","redirectTo","url","window","location","href","checkSession","data","error","auth","getSession","session","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/player/Documents/GitHub/synask-app/src/components/ProtectedRoute.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { createClient } from '@supabase/supabase-js';\r\n\r\nconst supabase = createClient('https://cnicyffiqvdhgyzkogtl.supabase.co', 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImNuaWN5ZmZpcXZkaGd5emtvZ3RsIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MDc3NDM2NzcsImV4cCI6MjAyMzMxOTY3N30.bZoapdV-TJiq42uJaOPGBfPz91ULReQ1_ahXpUHNaJ8');\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n    const [isAuthenticated, setIsAuthenticated] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const redirectTo = (url) => {\r\n        window.location.href = url;\r\n        return null; // Для React Router, чтобы не рендерить ничего\r\n    };\r\n\r\n    useEffect(() => {\r\n        const checkSession = async () => {\r\n            try {\r\n                const { data, error } = await supabase.auth.getSession();\r\n                if (error) throw error;\r\n                setIsAuthenticated(data.session ? true : false);\r\n            } catch (error) {\r\n                setIsAuthenticated(false);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        checkSession();\r\n    }, []);\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>; // Индикатор загрузки\r\n    }\r\n\r\n    return isAuthenticated ? children : redirectTo(\"/login.html\");\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,YAAY,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,QAAQ,GAAGH,YAAY,CAAC,0CAA0C,EAAE,kNAAkN,CAAC;AAE7R,MAAMI,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMc,UAAU,GAAIC,GAAG,IAAK;IACxBC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGH,GAAG;IAC1B,OAAO,IAAI,CAAC,CAAC;EACjB,CAAC;EAEDd,SAAS,CAAC,MAAM;IACZ,MAAMkB,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACA,MAAM;UAAEC,IAAI;UAAEC;QAAM,CAAC,GAAG,MAAMf,QAAQ,CAACgB,IAAI,CAACC,UAAU,CAAC,CAAC;QACxD,IAAIF,KAAK,EAAE,MAAMA,KAAK;QACtBV,kBAAkB,CAACS,IAAI,CAACI,OAAO,GAAG,IAAI,GAAG,KAAK,CAAC;MACnD,CAAC,CAAC,OAAOH,KAAK,EAAE;QACZV,kBAAkB,CAAC,KAAK,CAAC;MAC7B,CAAC,SAAS;QACNE,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDM,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIP,OAAO,EAAE;IACT,oBAAOP,OAAA;MAAAG,QAAA,EAAK;IAAU;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAC;EAClC;EAEA,OAAOlB,eAAe,GAAGF,QAAQ,GAAGM,UAAU,CAAC,aAAa,CAAC;AACjE,CAAC;AAACL,EAAA,CA9BIF,cAAc;AAAAsB,EAAA,GAAdtB,cAAc;AAgCpB,eAAeA,cAAc;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}