{"ast":null,"code":"import React,{useEffect,useState}from'react';import getSupabaseClient from'../config/SupabaseClient';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const supabase=getSupabaseClient();const ChatNotificationListener=()=>{const[loading,setLoading]=useState(true);const[status,setStatus]=useState('Подключение...');const[chats,setChats]=useState([]);const[isBackgroundEnabled,setIsBackgroundEnabled]=useState(false);const[timer,setTimer]=useState(null);useEffect(()=>{const initNotifications=async()=>{try{// Запрос разрешения на уведомления\nawait requestPermission();console.log('Уведомления разрешены');// Подписываем пользователя на push-уведомления\nconst subscription=await subscribeUserToPush();console.log('Push-подписка получена:',subscription);setStatus('Подключение установлено');startListeningForMessages();}catch(error){console.error('Ошибка при инициализации уведомлений:',error);setStatus('Ошибка инициализации уведомлений');}};initNotifications();// Очистка таймера при размонтировании компонента\nreturn()=>{if(timer){clearTimeout(timer);}};},[]);const requestPermission=async()=>{const permissionResult=await Notification.requestPermission();if(permissionResult!=='granted'){throw new Error('Permission not granted for Notification');}};const subscribeUserToPush=async()=>{const registration=await navigator.serviceWorker.register('/service-worker.js');const subscribeOptions={userVisibleOnly:true,applicationServerKey:urlBase64ToUint8Array('BEl62iUYgUivxIkv69yViEuiBIa-Ib9-SkvMeAtA3LFgDzkrxZJjSgSnfckjBJuBkr3qBUYIHBQFLXYp5Nksh8U')};const pushSubscription=await registration.pushManager.subscribe(subscribeOptions);return pushSubscription;};const urlBase64ToUint8Array=base64String=>{const padding='='.repeat((4-base64String.length%4)%4);const base64=(base64String+padding).replace(/-/g,'+').replace(/_/g,'/');const rawData=window.atob(base64);const outputArray=new Uint8Array(rawData.length);for(let i=0;i<rawData.length;++i){outputArray[i]=rawData.charCodeAt(i);}return outputArray;};const startListeningForMessages=async()=>{setLoading(true);// Получаем текущего пользователя\nconst{data:{user}}=await supabase.auth.getUser();if(!user){setStatus('Пользователь не найден');setLoading(false);return;}// Загружаем чаты, где текущий пользователь является участником\nconst{data:chatData,error:chatError}=await supabase.from('chats').select('*');if(chatError){console.error('Ошибка при получении чатов:',chatError);setStatus('Ошибка при получении чатов');setLoading(false);return;}const userChats=chatData.filter(chat=>{if(chat.is_group){const roles=Object.values(chat.members);return roles.some(role=>role.includes(user.id));}else{return chat.members.includes(user.id);}});setChats(userChats);setLoading(false);// Подписываемся на изменения в таблице сообщений\nconst messageChannel=supabase.channel('public:messages').on('postgres_changes',{event:'INSERT',schema:'public',table:'messages'},async payload=>{const newMessage=payload.new;if(newMessage.user_id!==user.id&&userChats.some(chat=>chat.id===newMessage.chat_id)){const chat=userChats.find(c=>c.id===newMessage.chat_id);const{data:senderData,error:senderError}=await supabase.from('users_public_information').select('first_name, last_name, avatar_url').eq('auth_id',newMessage.user_id).single();if(senderError){console.error('Ошибка при получении данных пользователя:',senderError);return;}sendNotification(chat,newMessage,senderData);}}).subscribe();return()=>{supabase.removeChannel(messageChannel);};};const sendNotification=(chat,message,sender)=>{const isGroup=chat.is_group;const notificationOptions={body:\"\\u041D\\u043E\\u0432\\u043E\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435 \\u043E\\u0442 \".concat(sender.first_name,\" \").concat(sender.last_name,\": \").concat(message.content),icon:isGroup?chat.photo_url:sender.avatar_url};new Notification(isGroup?chat.name:'Личные сообщения',notificationOptions);};const toggleBackgroundMode=()=>{if(isBackgroundEnabled){setIsBackgroundEnabled(false);setStatus('Фоновая работа выключена');if(timer){clearTimeout(timer);setTimer(null);}}else{setIsBackgroundEnabled(true);setStatus('Фоновая работа включена');setTimer(setTimeout(()=>{setIsBackgroundEnabled(false);setStatus('Фоновая работа завершена');},30*1000));// Таймер на 30 минут\n}};if(loading){return/*#__PURE__*/_jsx(\"div\",{children:\"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"});}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{children:status}),/*#__PURE__*/_jsx(\"button\",{onClick:toggleBackgroundMode,children:isBackgroundEnabled?'Выключить фоновую работу':'Включить фоновую работу'})]});};export default ChatNotificationListener;","map":{"version":3,"names":["React","useEffect","useState","getSupabaseClient","jsx","_jsx","jsxs","_jsxs","supabase","ChatNotificationListener","loading","setLoading","status","setStatus","chats","setChats","isBackgroundEnabled","setIsBackgroundEnabled","timer","setTimer","initNotifications","requestPermission","console","log","subscription","subscribeUserToPush","startListeningForMessages","error","clearTimeout","permissionResult","Notification","Error","registration","navigator","serviceWorker","register","subscribeOptions","userVisibleOnly","applicationServerKey","urlBase64ToUint8Array","pushSubscription","pushManager","subscribe","base64String","padding","repeat","length","base64","replace","rawData","window","atob","outputArray","Uint8Array","i","charCodeAt","data","user","auth","getUser","chatData","chatError","from","select","userChats","filter","chat","is_group","roles","Object","values","members","some","role","includes","id","messageChannel","channel","on","event","schema","table","payload","newMessage","new","user_id","chat_id","find","c","senderData","senderError","eq","single","sendNotification","removeChannel","message","sender","isGroup","notificationOptions","body","concat","first_name","last_name","content","icon","photo_url","avatar_url","name","toggleBackgroundMode","setTimeout","children","onClick"],"sources":["C:/Users/player/Documents/GitHub/synask-app/src/pages/garbage/test_notif.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport getSupabaseClient from '../config/SupabaseClient';\r\nconst supabase = getSupabaseClient();\r\n\r\n\r\nconst ChatNotificationListener = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [status, setStatus] = useState('Подключение...');\r\n  const [chats, setChats] = useState([]);\r\n  const [isBackgroundEnabled, setIsBackgroundEnabled] = useState(false);\r\n  const [timer, setTimer] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const initNotifications = async () => {\r\n      try {\r\n        // Запрос разрешения на уведомления\r\n        await requestPermission();\r\n        console.log('Уведомления разрешены');\r\n\r\n        // Подписываем пользователя на push-уведомления\r\n        const subscription = await subscribeUserToPush();\r\n        console.log('Push-подписка получена:', subscription);\r\n\r\n        setStatus('Подключение установлено');\r\n        startListeningForMessages();\r\n      } catch (error) {\r\n        console.error('Ошибка при инициализации уведомлений:', error);\r\n        setStatus('Ошибка инициализации уведомлений');\r\n      }\r\n    };\r\n\r\n    initNotifications();\r\n\r\n    // Очистка таймера при размонтировании компонента\r\n    return () => {\r\n      if (timer) {\r\n        clearTimeout(timer);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const requestPermission = async () => {\r\n    const permissionResult = await Notification.requestPermission();\r\n    if (permissionResult !== 'granted') {\r\n      throw new Error('Permission not granted for Notification');\r\n    }\r\n  };\r\n\r\n  const subscribeUserToPush = async () => {\r\n    const registration = await navigator.serviceWorker.register('/service-worker.js');\r\n    const subscribeOptions = {\r\n      userVisibleOnly: true,\r\n      applicationServerKey: urlBase64ToUint8Array(\r\n        'BEl62iUYgUivxIkv69yViEuiBIa-Ib9-SkvMeAtA3LFgDzkrxZJjSgSnfckjBJuBkr3qBUYIHBQFLXYp5Nksh8U'\r\n      ),\r\n    };\r\n\r\n    const pushSubscription = await registration.pushManager.subscribe(subscribeOptions);\r\n    return pushSubscription;\r\n  };\r\n\r\n  const urlBase64ToUint8Array = (base64String) => {\r\n    const padding = '='.repeat((4 - (base64String.length % 4)) % 4);\r\n    const base64 = (base64String + padding).replace(/-/g, '+').replace(/_/g, '/');\r\n\r\n    const rawData = window.atob(base64);\r\n    const outputArray = new Uint8Array(rawData.length);\r\n\r\n    for (let i = 0; i < rawData.length; ++i) {\r\n      outputArray[i] = rawData.charCodeAt(i);\r\n    }\r\n    return outputArray;\r\n  };\r\n\r\n  const startListeningForMessages = async () => {\r\n    setLoading(true);\r\n\r\n    // Получаем текущего пользователя\r\n    const { data: { user } } = await supabase.auth.getUser();\r\n\r\n    if (!user) {\r\n      setStatus('Пользователь не найден');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    // Загружаем чаты, где текущий пользователь является участником\r\n    const { data: chatData, error: chatError } = await supabase\r\n      .from('chats')\r\n      .select('*');\r\n\r\n    if (chatError) {\r\n      console.error('Ошибка при получении чатов:', chatError);\r\n      setStatus('Ошибка при получении чатов');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    const userChats = chatData.filter(chat => {\r\n      if (chat.is_group) {\r\n        const roles = Object.values(chat.members);\r\n        return roles.some(role => role.includes(user.id));\r\n      } else {\r\n        return chat.members.includes(user.id);\r\n      }\r\n    });\r\n\r\n    setChats(userChats);\r\n    setLoading(false);\r\n\r\n    // Подписываемся на изменения в таблице сообщений\r\n    const messageChannel = supabase\r\n      .channel('public:messages')\r\n      .on('postgres_changes', { event: 'INSERT', schema: 'public', table: 'messages' }, async (payload) => {\r\n        const newMessage = payload.new;\r\n\r\n        if (newMessage.user_id !== user.id && userChats.some(chat => chat.id === newMessage.chat_id)) {\r\n          const chat = userChats.find(c => c.id === newMessage.chat_id);\r\n\r\n          const { data: senderData, error: senderError } = await supabase\r\n            .from('users_public_information')\r\n            .select('first_name, last_name, avatar_url')\r\n            .eq('auth_id', newMessage.user_id)\r\n            .single();\r\n\r\n          if (senderError) {\r\n            console.error('Ошибка при получении данных пользователя:', senderError);\r\n            return;\r\n          }\r\n\r\n          sendNotification(chat, newMessage, senderData);\r\n        }\r\n      })\r\n      .subscribe();\r\n\r\n    return () => {\r\n      supabase.removeChannel(messageChannel);\r\n    };\r\n  };\r\n\r\n  const sendNotification = (chat, message, sender) => {\r\n    const isGroup = chat.is_group;\r\n    const notificationOptions = {\r\n      body: `Новое сообщение от ${sender.first_name} ${sender.last_name}: ${message.content}`,\r\n      icon: isGroup ? chat.photo_url : sender.avatar_url\r\n    };\r\n\r\n    new Notification(isGroup ? chat.name : 'Личные сообщения', notificationOptions);\r\n  };\r\n\r\n  const toggleBackgroundMode = () => {\r\n    if (isBackgroundEnabled) {\r\n      setIsBackgroundEnabled(false);\r\n      setStatus('Фоновая работа выключена');\r\n      if (timer) {\r\n        clearTimeout(timer);\r\n        setTimer(null);\r\n      }\r\n    } else {\r\n      setIsBackgroundEnabled(true);\r\n      setStatus('Фоновая работа включена');\r\n      setTimer(setTimeout(() => {\r\n        setIsBackgroundEnabled(false);\r\n        setStatus('Фоновая работа завершена');\r\n      }, 30 * 1000)); // Таймер на 30 минут\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Загрузка...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>{status}</div>\r\n      <button onClick={toggleBackgroundMode}>\r\n        {isBackgroundEnabled ? 'Выключить фоновую работу' : 'Включить фоновую работу'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatNotificationListener;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}