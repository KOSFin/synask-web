{"ast":null,"code":"import React,{useState,useEffect,useContext,useRef}from'react';import{useNavigate,useLocation}from'react-router-dom';import Sidebar from'./components/Sidebar';import ChatList from'./components/ChatList';import MessageList from'./components/MessageList';import InputArea from'./components/InputArea';import Filters from'./components/Filters';import ChatHeader from'./components/ChatHeader';import styles from'./styles/Messenger.module.css';import AccentColorContext from'../../pages/settings/AccentColorContext';import ChatContext from'../../components/ChatContext';import getSupabaseClient from'../config/SupabaseClient';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const supabase=getSupabaseClient();const Messenger=()=>{const[searchTerm,setSearchTerm]=useState('');const[chatListWidth,setChatListWidth]=useState(250);const{accentColor}=useContext(AccentColorContext);const{setSelectedChatId,selectedChatId,selectedChat}=useContext(ChatContext);const navigate=useNavigate();const location=useLocation();const isMobile=window.innerWidth<=768;useEffect(()=>{if(isMobile){setChatListWidth('100%');}else{setChatListWidth(250);}},[isMobile]);useEffect(()=>{const queryParams=new URLSearchParams(location.search);const chatIdFromUrl=queryParams.get('id');if(chatIdFromUrl&&chatIdFromUrl!==selectedChatId){setSelectedChatId(chatIdFromUrl);// setIsChatVisible(true); // Remove this line if not used\n}},[location.search,selectedChatId,setSelectedChatId]);const handleCloseChat=()=>{navigate({search:''});setSelectedChatId(null);// setIsChatVisible(false); // Remove this line if not used\n};const createChat=async()=>{try{// Проверяем, что выбранный чат существует\nif(!selectedChat||!selectedChat.membersInfo){console.error(\"No selected chat or membersInfo available.\");return;}// Формируем массив участников\nconst members=selectedChat.membersInfo.map(member=>member.auth_id);// No extra array wrapping\n// Выполняем запрос на вставку нового чата в базу данных\nconst{data,error}=await supabase.from('chats').insert({is_group:false,members:members,roles:'{}',settings:'{}'}).select();// Получаем одну запись сразу\nif(error){throw new Error(error.message);}console.log(\"Chat created successfully:\",data);// Обновляем URL с новым ID чата\nconst newChatId=await data[0].id;// Получаем ID созданного чата\nnavigate(\"?id=\".concat(newChatId),{replace:true});}catch(error){console.error(\"Error creating chat:\",error.message);}};return/*#__PURE__*/_jsx(\"div\",{className:styles.pageContainer,children:/*#__PURE__*/_jsxs(\"div\",{className:styles.container,style:{borderColor:accentColor},children:[!isMobile&&/*#__PURE__*/_jsx(Filters,{}),/*#__PURE__*/_jsxs(\"div\",{className:styles.chatListContainer,style:{width:chatListWidth},children:[/*#__PURE__*/_jsx(Sidebar,{setSearchTerm:setSearchTerm}),isMobile&&/*#__PURE__*/_jsx(Filters,{}),!isMobile&&/*#__PURE__*/_jsx(\"div\",{className:styles.closeButtonContainer,children:/*#__PURE__*/_jsx(\"button\",{className:styles.closeButton,onClick:handleCloseChat,children:\"\\u2716 \\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C \\u0434\\u0438\\u0430\\u043B\\u043E\\u0433\"})}),/*#__PURE__*/_jsx(ChatList,{searchTerm:searchTerm})]}),!isMobile&&/*#__PURE__*/_jsx(\"div\",{className:styles.resizer}),/*#__PURE__*/_jsx(\"div\",{className:\"\".concat(styles.main,\" \").concat(selectedChatId?styles.chatActive:''),children:selectedChatId?selectedChat!==null&&selectedChat!==void 0&&selectedChat.error?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:styles.noChatSelected,children:selectedChat.error}),isMobile&&/*#__PURE__*/_jsx(\"button\",{className:styles.closeButton,onClick:handleCloseChat,children:\"\\u2716 \\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C \\u0434\\u0438\\u0430\\u043B\\u043E\\u0433\"})]}):(selectedChat===null||selectedChat===void 0?void 0:selectedChat.chatExists)===false?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ChatHeader,{chatId:selectedChatId}),/*#__PURE__*/_jsx(\"div\",{className:styles.noMessages,children:\"\\u041D\\u0430\\u0447\\u043D\\u0438\\u0442\\u0435 \\u0412\\u0430\\u0448 \\u043D\\u043E\\u0432\\u044B\\u0439 \\u0434\\u0438\\u0430\\u043B\\u043E\\u0433! \\u0423 \\u0441\\u043E\\u0431\\u0435\\u0441\\u0435\\u0434\\u043D\\u0438\\u043A\\u0430 \\u0442\\u0430\\u043A\\u0436\\u0435 \\u043F\\u043E\\u044F\\u0432\\u0438\\u0442\\u0441\\u044F \\u044D\\u0442\\u043E\\u0442 \\u0434\\u0438\\u0430\\u043B\\u043E\\u0433 \\u0432 \\u0441\\u043F\\u0438\\u0441\\u043A\\u0435 \\u0447\\u0430\\u0442\\u043E\\u0432.\"}),/*#__PURE__*/_jsx(\"button\",{className:styles.startChatButton,onClick:createChat,children:\"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u0447\\u0430\\u0442\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ChatHeader,{chatId:selectedChatId}),/*#__PURE__*/_jsx(MessageList,{chatId:selectedChatId}),/*#__PURE__*/_jsx(InputArea,{chatId:selectedChatId})]}):/*#__PURE__*/_jsx(_Fragment,{children:!isMobile&&/*#__PURE__*/_jsx(\"div\",{className:styles.noChatSelected,children:\"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0447\\u0430\\u0442, \\u0447\\u0442\\u043E\\u0431\\u044B \\u043D\\u0430\\u0447\\u0430\\u0442\\u044C \\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435\"})})})]})});};export default Messenger;","map":{"version":3,"names":["React","useState","useEffect","useContext","useRef","useNavigate","useLocation","Sidebar","ChatList","MessageList","InputArea","Filters","ChatHeader","styles","AccentColorContext","ChatContext","getSupabaseClient","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","supabase","Messenger","searchTerm","setSearchTerm","chatListWidth","setChatListWidth","accentColor","setSelectedChatId","selectedChatId","selectedChat","navigate","location","isMobile","window","innerWidth","queryParams","URLSearchParams","search","chatIdFromUrl","get","handleCloseChat","createChat","membersInfo","console","error","members","map","member","auth_id","data","from","insert","is_group","roles","settings","select","Error","message","log","newChatId","id","concat","replace","className","pageContainer","children","container","style","borderColor","chatListContainer","width","closeButtonContainer","closeButton","onClick","resizer","main","chatActive","noChatSelected","chatExists","chatId","noMessages","startChatButton"],"sources":["C:/Users/player/Documents/GitHub/synask-app/src/pages/messenger/Messenger.js"],"sourcesContent":["import React, { useState, useEffect, useContext, useRef } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport Sidebar from './components/Sidebar';\r\nimport ChatList from './components/ChatList';\r\nimport MessageList from './components/MessageList';\r\nimport InputArea from './components/InputArea';\r\nimport Filters from './components/Filters';\r\nimport ChatHeader from './components/ChatHeader';\r\nimport styles from './styles/Messenger.module.css';\r\nimport AccentColorContext from '../../pages/settings/AccentColorContext';\r\nimport ChatContext from '../../components/ChatContext';\r\nimport getSupabaseClient from '../config/SupabaseClient';\r\n\r\nconst supabase = getSupabaseClient();\r\n\r\nconst Messenger = () => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [chatListWidth, setChatListWidth] = useState(250);\r\n\r\n  const { accentColor } = useContext(AccentColorContext);\r\n  const { setSelectedChatId, selectedChatId, selectedChat } = useContext(ChatContext);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const isMobile = window.innerWidth <= 768;\r\n\r\n  useEffect(() => {\r\n    if (isMobile) {\r\n      setChatListWidth('100%');\r\n    } else {\r\n      setChatListWidth(250);\r\n    }\r\n  }, [isMobile]);\r\n\r\n  useEffect(() => {\r\n    const queryParams = new URLSearchParams(location.search);\r\n    const chatIdFromUrl = queryParams.get('id');\r\n\r\n    if (chatIdFromUrl && chatIdFromUrl !== selectedChatId) {\r\n      setSelectedChatId(chatIdFromUrl);\r\n      // setIsChatVisible(true); // Remove this line if not used\r\n    }\r\n  }, [location.search, selectedChatId, setSelectedChatId]);\r\n\r\n\r\n  const handleCloseChat = () => {\r\n    navigate({ search: '' });\r\n    setSelectedChatId(null);\r\n    // setIsChatVisible(false); // Remove this line if not used\r\n  };\r\n\r\n  const createChat = async () => {\r\n      try {\r\n        // Проверяем, что выбранный чат существует\r\n        if (!selectedChat || !selectedChat.membersInfo) {\r\n          console.error(\"No selected chat or membersInfo available.\");\r\n          return;\r\n        }\r\n\r\n        // Формируем массив участников\r\n        const members = selectedChat.membersInfo.map(member => member.auth_id); // No extra array wrapping\r\n\r\n        // Выполняем запрос на вставку нового чата в базу данных\r\n        const { data, error } = await supabase\r\n          .from('chats')\r\n          .insert({\r\n            is_group: false,\r\n            members: members,\r\n            roles: '{}',\r\n            settings: '{}'\r\n          })\r\n          .select(); // Получаем одну запись сразу\r\n\r\n        if (error) {\r\n          throw new Error(error.message);\r\n        }\r\n\r\n        console.log(\"Chat created successfully:\", data);\r\n\r\n        // Обновляем URL с новым ID чата\r\n        const newChatId = await data[0].id; // Получаем ID созданного чата\r\n        navigate(`?id=${newChatId}`, { replace: true });\r\n\r\n      } catch (error) {\r\n        console.error(\"Error creating chat:\", error.message);\r\n      }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.pageContainer}>\r\n      <div className={styles.container} style={{ borderColor: accentColor }}>\r\n        {!isMobile && <Filters />}\r\n        <div className={styles.chatListContainer} style={{ width: chatListWidth }}>\r\n          <Sidebar setSearchTerm={setSearchTerm} />\r\n          {isMobile && <Filters />}\r\n          {!isMobile && (\r\n            <div className={styles.closeButtonContainer}>\r\n              <button className={styles.closeButton} onClick={handleCloseChat}>\r\n                ✖ Закрыть диалог\r\n              </button>\r\n            </div>\r\n          )}\r\n          <ChatList searchTerm={searchTerm} />\r\n        </div>\r\n        {!isMobile && <div className={styles.resizer}></div>}\r\n\r\n        <div className={`${styles.main} ${selectedChatId ? styles.chatActive : ''}`}>\r\n          {selectedChatId ? (\r\n            selectedChat?.error ? (\r\n              <>\r\n                  <div className={styles.noChatSelected}>\r\n                    {selectedChat.error}\r\n                  </div>\r\n                  {isMobile && (\r\n                      <button className={styles.closeButton} onClick={handleCloseChat}>\r\n                        ✖ Закрыть диалог\r\n                      </button>\r\n                  )}\r\n              </>\r\n            ) : selectedChat?.chatExists === false ? (\r\n              <>\r\n                <ChatHeader chatId={selectedChatId} />\r\n                <div className={styles.noMessages}>\r\n                  Начните Ваш новый диалог! У собеседника также появится этот диалог в списке чатов.\r\n                </div>\r\n                <button className={styles.startChatButton} onClick={createChat}>\r\n                  Создать чат\r\n                </button>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <ChatHeader chatId={selectedChatId} />\r\n                <MessageList chatId={selectedChatId} />\r\n                <InputArea chatId={selectedChatId} />\r\n              </>\r\n            )\r\n          ) : (\r\n            <>\r\n              {!isMobile && (\r\n                <div className={styles.noChatSelected}>Выберите чат, чтобы начать общение</div>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Messenger;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}