{"ast":null,"code":"import React,{useContext,useEffect,useState,useRef}from'react';import Message from'./Message';import styles from'../styles/MessageList.module.css';import ChatContext from'../../../components/ChatContext';import{format,isToday,isYesterday,differenceInDays,parseISO}from'date-fns';import{ru}from'date-fns/locale';import Calendar from'react-calendar';import'react-calendar/dist/Calendar.css';import MessageMenu from'./MessageMenu';import MessengerSettingsContext from'../../../components/contexts/MessengerSettingsContext';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MessageList=()=>{const{messages,selectedChat,selectedChatId,pendingQueue,setPendingQueue,messageStatus,setMessageStatus}=useContext(ChatContext);const{backgroundChat}=useContext(MessengerSettingsContext);const[calendarDate,setCalendarDate]=useState(null);const[isCalendarOpen,setIsCalendarOpen]=useState(false);const[activeMessage,setActiveMessage]=useState(null);const[menuPosition,setMenuPosition]=useState({x:0,y:0});const messagesToRender=20;// Количество сообщений, отображаемых сразу\nconst[renderedMessages,setRenderedMessages]=useState([]);const[startIndex,setStartIndex]=useState(0);const[isLoadingMore,setIsLoadingMore]=useState(false);const containerRef=useRef(null);const isAutoScroll=useRef(true);// Функция форматирования даты\nconst formatDate=date=>{if(isToday(date))return'Сегодня';if(isYesterday(date))return'Вчера';const daysAgo=differenceInDays(new Date(),date);if(daysAgo<7)return\"\".concat(daysAgo,\" \\u0434\\u043D\\u0435\\u0439 \\u043D\\u0430\\u0437\\u0430\\u0434\");return format(date,'dd MMMM yyyy',{locale:ru});};// Группировка сообщений по дате\nconst groupedMessages=messages.reduce((acc,message)=>{const messageDate=format(new Date(message.created_at),'yyyy-MM-dd');if(!acc[messageDate])acc[messageDate]=[];acc[messageDate].push(message);return acc;},{});// Открытие/закрытие календаря\nconst handleDateClick=date=>{setCalendarDate(date);setIsCalendarOpen(true);};// Прокрутка до низа\nconst scrollToBottom=()=>{var _containerRef$current;(_containerRef$current=containerRef.current)===null||_containerRef$current===void 0?void 0:_containerRef$current.scrollTo({top:containerRef.current.scrollHeight,behavior:'smooth'// Плавная анимация\n});};// Отслеживание изменений в списке сообщений\nuseEffect(()=>{if(isAutoScroll.current){scrollToBottom();// Авто-прокрутка до низа при появлении новых сообщений\n}},[messages,pendingQueue]);// Обнуление сообщений при смене чата\nuseEffect(()=>{if(selectedChatId){setRenderedMessages([]);// Очищаем рендеренные сообщения\nsetStartIndex(messages.length-messagesToRender);// Начинаем с конца\nscrollToBottom();// Прокручиваем до конца при открытии нового чата\n}},[selectedChatId]);// Подгрузка сообщений при прокрутке вверх\nconst handleScroll=()=>{if(containerRef.current.scrollTop===0&&startIndex>0){setIsLoadingMore(true);setTimeout(()=>{const newStartIndex=Math.max(startIndex-messagesToRender,0);setStartIndex(newStartIndex);setIsLoadingMore(false);},500);}// Проверка, находится ли пользователь внизу чата\nconst isUserAtBottom=containerRef.current.scrollHeight-containerRef.current.scrollTop===containerRef.current.clientHeight;isAutoScroll.current=isUserAtBottom;// Если пользователь не внизу, отключаем авто-прокрутку\n};useEffect(()=>{setRenderedMessages(messages.slice(startIndex,messages.length));},[startIndex,messages]);const handleOutsideClick=e=>{if(!e.target.closest('.calendar-container')&&isCalendarOpen){setIsCalendarOpen(false);}};// Открытие меню для сообщения\nconst handleMessageClick=(e,message)=>{e.preventDefault();console.log(\"Clicked message:\",message);// Лог для проверки\nsetActiveMessage(message);setMenuPosition({x:e.pageX,y:e.pageY});// Устанавливаем позицию меню\n};const handleCloseMenu=()=>{setActiveMessage(null);};useEffect(()=>{const messageElements=document.querySelectorAll('.messageContainer');messageElements.forEach(el=>{el.addEventListener('click',()=>console.log('Clicked'));});return()=>{messageElements.forEach(el=>{el.removeEventListener('click',()=>console.log('Clicked'));});};},[]);// Функция для рендеринга статуса сообщения\nconst renderMessageStatus=messageId=>{const status=messageStatus[messageId]||'sent';// По умолчанию \"sent\"\nreturn status;};// Функция для обновления сообщения\nconst handleMessageUpdated=(messageId,newContent)=>{const updatedMessages=messages.map(msg=>msg.id===messageId?{...msg,content:newContent}:msg);// Здесь нужно обновить состояние сообщений (придется хранить их в ChatContext или другом контексте)\n};if(!selectedChat){return/*#__PURE__*/_jsx(\"div\",{className:styles.noMessages,children:\"\\u041D\\u0435\\u0442 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0439\"});}if(!messages||messages.length===0){return/*#__PURE__*/_jsx(\"div\",{className:styles.noMessages,children:\"\\u041D\\u0435\\u0442 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0439\"});}return/*#__PURE__*/_jsxs(\"div\",{className:styles.messages,ref:containerRef,onScroll:handleScroll,style:{backgroundImage:backgroundChat.type==='color'?\"linear-gradient(\".concat(backgroundChat.colors.length>1?backgroundChat.colors.join(', '):\"\".concat(backgroundChat.colors[0],\", \").concat(backgroundChat.colors[0]),\")\"):\"url(\".concat(backgroundChat.imageURL,\")\"),backgroundSize:'cover',backgroundAttachment:'fixed',// чтобы изображение не двигалось при прокрутке\nbackgroundPosition:'center',// центрируем изображение\nbackgroundBlendMode:backgroundChat.type==='image'?'overlay':'normal',// для затемнения изображения\nbackgroundColor:backgroundChat.type==='image'?\"rgba(0, 0, 0, \".concat(backgroundChat.imageOpacity,\")\"):'transparent'// затемнение изображения\n},children:[Object.keys(groupedMessages).map(date=>/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:styles.dateSeparator,onClick:()=>handleDateClick(parseISO(date)),children:formatDate(parseISO(date))}),groupedMessages[date].map(message=>{const userInfo=selectedChat.membersInfo.find(member=>member.auth_id===message.user_id);if(!userInfo)return null;return/*#__PURE__*/_jsxs(\"div\",{className:styles.messageContainer,onContextMenu:e=>handleMessageClick(e,message),children:[/*#__PURE__*/_jsx(Message,{message:{id:message.id,user:\"\".concat(userInfo.first_name,\" \").concat(userInfo.last_name),text:message.content,time:new Date(message.created_at).toLocaleTimeString([],{hour:'2-digit',minute:'2-digit'}),isUser:message.user_id===selectedChat.currentUserId,avatar:userInfo.avatar_url}}),message.user_id===selectedChat.currentUserId&&renderMessageStatus(message.id)]},message.id);})]},date)),pendingQueue.map(message=>/*#__PURE__*/_jsx(\"div\",{className:styles.messageContainer,children:/*#__PURE__*/_jsx(Message,{message:{id:message.id,user:'Пользователь',text:message.content,time:new Date().toLocaleTimeString([],{hour:'2-digit',minute:'2-digit'}),isUser:'yes',avatar:'gf',status:renderMessageStatus(message.id)}})},message.id)),activeMessage&&/*#__PURE__*/_jsx(MessageMenu,{message:activeMessage,position:menuPosition// Передаем позицию меню\n,onClose:handleCloseMenu,onMessageUpdated:handleMessageUpdated}),isCalendarOpen&&/*#__PURE__*/_jsx(\"div\",{className:styles.calendarOverlay,children:/*#__PURE__*/_jsxs(\"div\",{className:styles.calendarContainer,children:[/*#__PURE__*/_jsx(\"button\",{className:styles.closeBtn,onClick:()=>setIsCalendarOpen(false),children:\"\\u2716\"}),/*#__PURE__*/_jsx(Calendar,{onChange:setCalendarDate,value:calendarDate,locale:\"ru-RU\",tileClassName:_ref=>{let{date}=_ref;return isToday(date)?styles.todayTile:'';}})]})})]});};export default MessageList;","map":{"version":3,"names":["React","useContext","useEffect","useState","useRef","Message","styles","ChatContext","format","isToday","isYesterday","differenceInDays","parseISO","ru","Calendar","MessageMenu","MessengerSettingsContext","jsx","_jsx","jsxs","_jsxs","MessageList","messages","selectedChat","selectedChatId","pendingQueue","setPendingQueue","messageStatus","setMessageStatus","backgroundChat","calendarDate","setCalendarDate","isCalendarOpen","setIsCalendarOpen","activeMessage","setActiveMessage","menuPosition","setMenuPosition","x","y","messagesToRender","renderedMessages","setRenderedMessages","startIndex","setStartIndex","isLoadingMore","setIsLoadingMore","containerRef","isAutoScroll","formatDate","date","daysAgo","Date","concat","locale","groupedMessages","reduce","acc","message","messageDate","created_at","push","handleDateClick","scrollToBottom","_containerRef$current","current","scrollTo","top","scrollHeight","behavior","length","handleScroll","scrollTop","setTimeout","newStartIndex","Math","max","isUserAtBottom","clientHeight","slice","handleOutsideClick","e","target","closest","handleMessageClick","preventDefault","console","log","pageX","pageY","handleCloseMenu","messageElements","document","querySelectorAll","forEach","el","addEventListener","removeEventListener","renderMessageStatus","messageId","status","handleMessageUpdated","newContent","updatedMessages","map","msg","id","content","className","noMessages","children","ref","onScroll","style","backgroundImage","type","colors","join","imageURL","backgroundSize","backgroundAttachment","backgroundPosition","backgroundBlendMode","backgroundColor","imageOpacity","Object","keys","dateSeparator","onClick","userInfo","membersInfo","find","member","auth_id","user_id","messageContainer","onContextMenu","user","first_name","last_name","text","time","toLocaleTimeString","hour","minute","isUser","currentUserId","avatar","avatar_url","position","onClose","onMessageUpdated","calendarOverlay","calendarContainer","closeBtn","onChange","value","tileClassName","_ref","todayTile"],"sources":["C:/Users/player/Documents/GitHub/synask-app/src/pages/messenger/components/MessageList.js"],"sourcesContent":["import React, { useContext, useEffect, useState, useRef } from 'react';\r\nimport Message from './Message';\r\nimport styles from '../styles/MessageList.module.css';\r\nimport ChatContext from '../../../components/ChatContext';\r\nimport { format, isToday, isYesterday, differenceInDays, parseISO } from 'date-fns';\r\nimport { ru } from 'date-fns/locale';\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport MessageMenu from './MessageMenu';\r\nimport MessengerSettingsContext from '../../../components/contexts/MessengerSettingsContext';\r\n\r\nconst MessageList = () => {\r\n  const { messages, selectedChat, selectedChatId, pendingQueue, setPendingQueue, messageStatus, setMessageStatus } = useContext(ChatContext);\r\n  const { backgroundChat } = useContext(MessengerSettingsContext);\r\n  const [calendarDate, setCalendarDate] = useState(null);\r\n  const [isCalendarOpen, setIsCalendarOpen] = useState(false);\r\n  const [activeMessage, setActiveMessage] = useState(null);\r\n  const [menuPosition, setMenuPosition] = useState({ x: 0, y: 0 });\r\n  const messagesToRender = 20; // Количество сообщений, отображаемых сразу\r\n  const [renderedMessages, setRenderedMessages] = useState([]);\r\n  const [startIndex, setStartIndex] = useState(0);\r\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\r\n  const containerRef = useRef(null);\r\n  const isAutoScroll = useRef(true);\r\n\r\n  // Функция форматирования даты\r\n  const formatDate = (date) => {\r\n    if (isToday(date)) return 'Сегодня';\r\n    if (isYesterday(date)) return 'Вчера';\r\n    const daysAgo = differenceInDays(new Date(), date);\r\n    if (daysAgo < 7) return `${daysAgo} дней назад`;\r\n    return format(date, 'dd MMMM yyyy', { locale: ru });\r\n  };\r\n\r\n  // Группировка сообщений по дате\r\n  const groupedMessages = messages.reduce((acc, message) => {\r\n    const messageDate = format(new Date(message.created_at), 'yyyy-MM-dd');\r\n    if (!acc[messageDate]) acc[messageDate] = [];\r\n    acc[messageDate].push(message);\r\n    return acc;\r\n  }, {});\r\n\r\n  // Открытие/закрытие календаря\r\n  const handleDateClick = (date) => {\r\n    setCalendarDate(date);\r\n    setIsCalendarOpen(true);\r\n  };\r\n\r\n // Прокрутка до низа\r\n  const scrollToBottom = () => {\r\n    containerRef.current?.scrollTo({\r\n      top: containerRef.current.scrollHeight,\r\n      behavior: 'smooth', // Плавная анимация\r\n    });\r\n  };\r\n\r\n  // Отслеживание изменений в списке сообщений\r\n  useEffect(() => {\r\n    if (isAutoScroll.current) {\r\n      scrollToBottom(); // Авто-прокрутка до низа при появлении новых сообщений\r\n    }\r\n  }, [messages, pendingQueue]);\r\n\r\n  // Обнуление сообщений при смене чата\r\n  useEffect(() => {\r\n    if (selectedChatId) {\r\n      setRenderedMessages([]); // Очищаем рендеренные сообщения\r\n      setStartIndex(messages.length - messagesToRender); // Начинаем с конца\r\n      scrollToBottom(); // Прокручиваем до конца при открытии нового чата\r\n    }\r\n  }, [selectedChatId]);\r\n\r\n  // Подгрузка сообщений при прокрутке вверх\r\n  const handleScroll = () => {\r\n    if (containerRef.current.scrollTop === 0 && startIndex > 0) {\r\n      setIsLoadingMore(true);\r\n      setTimeout(() => {\r\n        const newStartIndex = Math.max(startIndex - messagesToRender, 0);\r\n        setStartIndex(newStartIndex);\r\n        setIsLoadingMore(false);\r\n      }, 500);\r\n    }\r\n\r\n    // Проверка, находится ли пользователь внизу чата\r\n    const isUserAtBottom =\r\n      containerRef.current.scrollHeight - containerRef.current.scrollTop === containerRef.current.clientHeight;\r\n\r\n    isAutoScroll.current = isUserAtBottom; // Если пользователь не внизу, отключаем авто-прокрутку\r\n  };\r\n\r\n  useEffect(() => {\r\n    setRenderedMessages(messages.slice(startIndex, messages.length));\r\n  }, [startIndex, messages]);\r\n\r\n  const handleOutsideClick = (e) => {\r\n    if (!e.target.closest('.calendar-container') && isCalendarOpen) {\r\n      setIsCalendarOpen(false);\r\n    }\r\n  };\r\n\r\n  // Открытие меню для сообщения\r\n  const handleMessageClick = (e, message) => {\r\n      e.preventDefault();\r\n      console.log(\"Clicked message:\", message); // Лог для проверки\r\n      setActiveMessage(message);\r\n      setMenuPosition({ x: e.pageX, y: e.pageY }); // Устанавливаем позицию меню\r\n  };\r\n\r\n  const handleCloseMenu = () => {\r\n    setActiveMessage(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n      const messageElements = document.querySelectorAll('.messageContainer');\r\n      messageElements.forEach((el) => {\r\n        el.addEventListener('click', () => console.log('Clicked'));\r\n      });\r\n\r\n      return () => {\r\n        messageElements.forEach((el) => {\r\n          el.removeEventListener('click', () => console.log('Clicked'));\r\n        });\r\n      };\r\n  }, []);\r\n\r\n  // Функция для рендеринга статуса сообщения\r\n  const renderMessageStatus = (messageId) => {\r\n    const status = messageStatus[messageId] || 'sent'; // По умолчанию \"sent\"\r\n\r\n    return status;\r\n  };\r\n\r\n  // Функция для обновления сообщения\r\n  const handleMessageUpdated = (messageId, newContent) => {\r\n    const updatedMessages = messages.map((msg) =>\r\n      msg.id === messageId ? { ...msg, content: newContent } : msg\r\n    );\r\n    // Здесь нужно обновить состояние сообщений (придется хранить их в ChatContext или другом контексте)\r\n  };\r\n\r\n  if (!selectedChat) {\r\n    return <div className={styles.noMessages}>Нет сообщений</div>;\r\n  }\r\n\r\n  if (!messages || messages.length === 0) {\r\n    return <div className={styles.noMessages}>Нет сообщений</div>;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={styles.messages}\r\n      ref={containerRef}\r\n      onScroll={handleScroll}\r\n      style={{\r\n        backgroundImage: backgroundChat.type === 'color'\r\n          ? `linear-gradient(${backgroundChat.colors.length > 1 ? backgroundChat.colors.join(', ') : `${backgroundChat.colors[0]}, ${backgroundChat.colors[0]}`})`\r\n          : `url(${backgroundChat.imageURL})`,\r\n        backgroundSize: 'cover',\r\n        backgroundAttachment: 'fixed', // чтобы изображение не двигалось при прокрутке\r\n        backgroundPosition: 'center', // центрируем изображение\r\n        backgroundBlendMode: backgroundChat.type === 'image' ? 'overlay' : 'normal', // для затемнения изображения\r\n        backgroundColor: backgroundChat.type === 'image' ? `rgba(0, 0, 0, ${backgroundChat.imageOpacity})` : 'transparent' // затемнение изображения\r\n      }}\r\n    >\r\n      {Object.keys(groupedMessages).map((date) => (\r\n        <div key={date}>\r\n          <div className={styles.dateSeparator} onClick={() => handleDateClick(parseISO(date))}>{formatDate(parseISO(date))}</div>\r\n          {groupedMessages[date].map((message) => {\r\n            const userInfo = selectedChat.membersInfo.find(member => member.auth_id === message.user_id);\r\n            if (!userInfo) return null;\r\n\r\n            return (\r\n              <div key={message.id} className={styles.messageContainer} onContextMenu={(e) => handleMessageClick(e, message)} >\r\n                <Message\r\n                  message={{\r\n                    id: message.id,\r\n                    user: `${userInfo.first_name} ${userInfo.last_name}`,\r\n                    text: message.content,\r\n                    time: new Date(message.created_at).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }),\r\n                    isUser: message.user_id === selectedChat.currentUserId,\r\n                    avatar: userInfo.avatar_url,\r\n                  }}\r\n                />\r\n                {message.user_id === selectedChat.currentUserId && renderMessageStatus(message.id)}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      ))}\r\n\r\n      {/* Рендер сообщений из очереди */}\r\n      {pendingQueue.map((message) => (\r\n        <div key={message.id} className={styles.messageContainer}>\r\n          <Message\r\n            message={{\r\n              id: message.id,\r\n              user: 'Пользователь',\r\n              text: message.content,\r\n              time: new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }),\r\n              isUser: 'yes',\r\n              avatar: 'gf',\r\n              status: renderMessageStatus(message.id),\r\n            }}\r\n          />\r\n        </div>\r\n      ))}\r\n\r\n      {activeMessage && (\r\n        <MessageMenu\r\n          message={activeMessage}\r\n          position={menuPosition} // Передаем позицию меню\r\n          onClose={handleCloseMenu}\r\n          onMessageUpdated={handleMessageUpdated}\r\n        />\r\n      )}\r\n\r\n      {isCalendarOpen && (\r\n        <div className={styles.calendarOverlay}>\r\n          <div className={styles.calendarContainer}>\r\n            <button className={styles.closeBtn} onClick={() => setIsCalendarOpen(false)}>\r\n              &#10006;\r\n            </button>\r\n            <Calendar\r\n              onChange={setCalendarDate}\r\n              value={calendarDate}\r\n              locale=\"ru-RU\"\r\n              tileClassName={({ date }) => (isToday(date) ? styles.todayTile : '')}\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}