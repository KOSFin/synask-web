{"ast":null,"code":"// ChatContext.js\nimport React,{createContext,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const ChatContext=/*#__PURE__*/createContext();export const ChatProvider=_ref=>{let{children}=_ref;const[messages,setMessages]=useState([]);const[newMessagesCount,setNewMessagesCount]=useState(0);const[isLoadingChats,setIsLoadingChats]=useState(true);const[chatList,setChatList]=useState([]);// Массив для списка чатов\nconst[messagesCache,setMessagesCache]=useState({});// Объект для кэша сообщений\nconst[selectedChatId,setSelectedChatId]=useState(null);const[selectedChat,setSelectedChat]=useState([]);const[isPageVisible,setIsPageVisible]=useState(true);// Состояние видимости страницы\nconst[isLoadingMessages,setIsLoadingMessages]=useState(false);const[messageStatus,setMessageStatus]=useState({});const[pendingQueue,setPendingQueue]=useState([]);// Очередь сообщений\nreturn/*#__PURE__*/_jsx(ChatContext.Provider,{value:{messages,setMessages,newMessagesCount,setNewMessagesCount,isLoadingChats,setIsLoadingChats,chatList,setChatList,messagesCache,setMessagesCache,selectedChatId,setSelectedChatId,isPageVisible,setIsPageVisible,isLoadingMessages,setIsLoadingMessages,selectedChat,setSelectedChat,messageStatus,setMessageStatus,pendingQueue,setPendingQueue},children:children});};export default ChatContext;","map":{"version":3,"names":["React","createContext","useState","jsx","_jsx","ChatContext","ChatProvider","_ref","children","messages","setMessages","newMessagesCount","setNewMessagesCount","isLoadingChats","setIsLoadingChats","chatList","setChatList","messagesCache","setMessagesCache","selectedChatId","setSelectedChatId","selectedChat","setSelectedChat","isPageVisible","setIsPageVisible","isLoadingMessages","setIsLoadingMessages","messageStatus","setMessageStatus","pendingQueue","setPendingQueue","Provider","value"],"sources":["C:/Users/player/Documents/GitHub/synask-app/src/components/ChatContext.js"],"sourcesContent":["// ChatContext.js\r\nimport React, { createContext, useState } from 'react';\r\n\r\nconst ChatContext = createContext();\r\n\r\nexport const ChatProvider = ({ children }) => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [newMessagesCount, setNewMessagesCount] = useState(0);\r\n    const [isLoadingChats, setIsLoadingChats] = useState(true);\r\n    const [chatList, setChatList] = useState([]); // Массив для списка чатов\r\n    const [messagesCache, setMessagesCache] = useState({}); // Объект для кэша сообщений\r\n    const [selectedChatId, setSelectedChatId] = useState(null);\r\n    const [selectedChat, setSelectedChat] = useState([]);\r\n    const [isPageVisible, setIsPageVisible] = useState(true); // Состояние видимости страницы\r\n    const [isLoadingMessages, setIsLoadingMessages] = useState(false);\r\n    const [messageStatus, setMessageStatus] = useState({});\r\n    const [pendingQueue, setPendingQueue] = useState([]); // Очередь сообщений\r\n\r\n    return (\r\n        <ChatContext.Provider value={{ messages, setMessages, newMessagesCount, setNewMessagesCount, isLoadingChats, setIsLoadingChats, chatList, setChatList, messagesCache, setMessagesCache, selectedChatId, setSelectedChatId, isPageVisible, setIsPageVisible, isLoadingMessages, setIsLoadingMessages, selectedChat, setSelectedChat, messageStatus, setMessageStatus, pendingQueue, setPendingQueue}}>\r\n            {children}\r\n        </ChatContext.Provider>\r\n    );\r\n};\r\n\r\nexport default ChatContext;\r\n\r\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEvD,KAAM,CAAAC,WAAW,cAAGJ,aAAa,CAAC,CAAC,CAEnC,MAAO,MAAM,CAAAK,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACrC,KAAM,CAACE,QAAQ,CAAEC,WAAW,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACS,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGV,QAAQ,CAAC,CAAC,CAAC,CAC3D,KAAM,CAACW,cAAc,CAAEC,iBAAiB,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CAC1D,KAAM,CAACa,QAAQ,CAAEC,WAAW,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CAAE;AAC9C,KAAM,CAACe,aAAa,CAAEC,gBAAgB,CAAC,CAAGhB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAE;AACxD,KAAM,CAACiB,cAAc,CAAEC,iBAAiB,CAAC,CAAGlB,QAAQ,CAAC,IAAI,CAAC,CAC1D,KAAM,CAACmB,YAAY,CAAEC,eAAe,CAAC,CAAGpB,QAAQ,CAAC,EAAE,CAAC,CACpD,KAAM,CAACqB,aAAa,CAAEC,gBAAgB,CAAC,CAAGtB,QAAQ,CAAC,IAAI,CAAC,CAAE;AAC1D,KAAM,CAACuB,iBAAiB,CAAEC,oBAAoB,CAAC,CAAGxB,QAAQ,CAAC,KAAK,CAAC,CACjE,KAAM,CAACyB,aAAa,CAAEC,gBAAgB,CAAC,CAAG1B,QAAQ,CAAC,CAAC,CAAC,CAAC,CACtD,KAAM,CAAC2B,YAAY,CAAEC,eAAe,CAAC,CAAG5B,QAAQ,CAAC,EAAE,CAAC,CAAE;AAEtD,mBACIE,IAAA,CAACC,WAAW,CAAC0B,QAAQ,EAACC,KAAK,CAAE,CAAEvB,QAAQ,CAAEC,WAAW,CAAEC,gBAAgB,CAAEC,mBAAmB,CAAEC,cAAc,CAAEC,iBAAiB,CAAEC,QAAQ,CAAEC,WAAW,CAAEC,aAAa,CAAEC,gBAAgB,CAAEC,cAAc,CAAEC,iBAAiB,CAAEG,aAAa,CAAEC,gBAAgB,CAAEC,iBAAiB,CAAEC,oBAAoB,CAAEL,YAAY,CAAEC,eAAe,CAAEK,aAAa,CAAEC,gBAAgB,CAAEC,YAAY,CAAEC,eAAe,CAAE,CAAAtB,QAAA,CAC/XA,QAAQ,CACS,CAAC,CAE/B,CAAC,CAED,cAAe,CAAAH,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}