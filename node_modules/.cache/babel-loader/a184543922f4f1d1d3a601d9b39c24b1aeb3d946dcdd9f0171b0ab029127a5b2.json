{"ast":null,"code":"import { DataService } from '../core/dataService/dataService.js';\nimport { AUTH_ERROR_TEXT } from './constants.js';\nimport { AuthErrorCode } from './types.js';\nclass AuthDataService extends DataService {\n  // TODO: Типизировать payload\n  sendSuccessData = payload => {\n    this.sendSuccess({\n      type: payload.type,\n      token: payload.token,\n      ttl: payload.ttl\n    });\n  };\n  sendNewTabHasBeenClosed = () => {\n    this.sendError({\n      code: AuthErrorCode.NewTabHasBeenClosed,\n      text: AUTH_ERROR_TEXT[AuthErrorCode.NewTabHasBeenClosed]\n    });\n  };\n  // TODO: Типизировать details\n  sendAuthorizationFailed = details => {\n    this.sendError({\n      code: AuthErrorCode.AuthorizationFailed,\n      text: AUTH_ERROR_TEXT[AuthErrorCode.AuthorizationFailed],\n      details\n    });\n  };\n  sendEventNotSupported = () => {\n    this.sendError({\n      code: AuthErrorCode.EventNotSupported,\n      text: AUTH_ERROR_TEXT[AuthErrorCode.EventNotSupported]\n    });\n  };\n  sendCannotCreateNewTab = () => {\n    this.sendError({\n      code: AuthErrorCode.CannotCreateNewTab,\n      text: AUTH_ERROR_TEXT[AuthErrorCode.CannotCreateNewTab]\n    });\n  };\n}\nexport { AuthDataService };","map":{"version":3,"names":["DataService","AUTH_ERROR_TEXT","AuthErrorCode","AuthDataService","sendSuccessData","payload","sendSuccess","type","token","ttl","sendNewTabHasBeenClosed","sendError","code","NewTabHasBeenClosed","text","sendAuthorizationFailed","details","AuthorizationFailed","sendEventNotSupported","EventNotSupported","sendCannotCreateNewTab","CannotCreateNewTab"],"sources":["C:/Users/player/Documents/GitHub/synask-app/node_modules/@vkid/sdk/dist-sdk/esm/auth/authDataService.js"],"sourcesContent":["import { DataService } from '../core/dataService/dataService.js';\nimport { AUTH_ERROR_TEXT } from './constants.js';\nimport { AuthErrorCode } from './types.js';\n\nclass AuthDataService extends DataService {\n    // TODO: Типизировать payload\n    sendSuccessData = (payload)=>{\n        this.sendSuccess({\n            type: payload.type,\n            token: payload.token,\n            ttl: payload.ttl\n        });\n    };\n    sendNewTabHasBeenClosed = ()=>{\n        this.sendError({\n            code: AuthErrorCode.NewTabHasBeenClosed,\n            text: AUTH_ERROR_TEXT[AuthErrorCode.NewTabHasBeenClosed]\n        });\n    };\n    // TODO: Типизировать details\n    sendAuthorizationFailed = (details)=>{\n        this.sendError({\n            code: AuthErrorCode.AuthorizationFailed,\n            text: AUTH_ERROR_TEXT[AuthErrorCode.AuthorizationFailed],\n            details\n        });\n    };\n    sendEventNotSupported = ()=>{\n        this.sendError({\n            code: AuthErrorCode.EventNotSupported,\n            text: AUTH_ERROR_TEXT[AuthErrorCode.EventNotSupported]\n        });\n    };\n    sendCannotCreateNewTab = ()=>{\n        this.sendError({\n            code: AuthErrorCode.CannotCreateNewTab,\n            text: AUTH_ERROR_TEXT[AuthErrorCode.CannotCreateNewTab]\n        });\n    };\n}\n\nexport { AuthDataService };\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,oCAAoC;AAChE,SAASC,eAAe,QAAQ,gBAAgB;AAChD,SAASC,aAAa,QAAQ,YAAY;AAE1C,MAAMC,eAAe,SAASH,WAAW,CAAC;EACtC;EACAI,eAAe,GAAIC,OAAO,IAAG;IACzB,IAAI,CAACC,WAAW,CAAC;MACbC,IAAI,EAAEF,OAAO,CAACE,IAAI;MAClBC,KAAK,EAAEH,OAAO,CAACG,KAAK;MACpBC,GAAG,EAAEJ,OAAO,CAACI;IACjB,CAAC,CAAC;EACN,CAAC;EACDC,uBAAuB,GAAGA,CAAA,KAAI;IAC1B,IAAI,CAACC,SAAS,CAAC;MACXC,IAAI,EAAEV,aAAa,CAACW,mBAAmB;MACvCC,IAAI,EAAEb,eAAe,CAACC,aAAa,CAACW,mBAAmB;IAC3D,CAAC,CAAC;EACN,CAAC;EACD;EACAE,uBAAuB,GAAIC,OAAO,IAAG;IACjC,IAAI,CAACL,SAAS,CAAC;MACXC,IAAI,EAAEV,aAAa,CAACe,mBAAmB;MACvCH,IAAI,EAAEb,eAAe,CAACC,aAAa,CAACe,mBAAmB,CAAC;MACxDD;IACJ,CAAC,CAAC;EACN,CAAC;EACDE,qBAAqB,GAAGA,CAAA,KAAI;IACxB,IAAI,CAACP,SAAS,CAAC;MACXC,IAAI,EAAEV,aAAa,CAACiB,iBAAiB;MACrCL,IAAI,EAAEb,eAAe,CAACC,aAAa,CAACiB,iBAAiB;IACzD,CAAC,CAAC;EACN,CAAC;EACDC,sBAAsB,GAAGA,CAAA,KAAI;IACzB,IAAI,CAACT,SAAS,CAAC;MACXC,IAAI,EAAEV,aAAa,CAACmB,kBAAkB;MACtCP,IAAI,EAAEb,eAAe,CAACC,aAAa,CAACmB,kBAAkB;IAC1D,CAAC,CAAC;EACN,CAAC;AACL;AAEA,SAASlB,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}