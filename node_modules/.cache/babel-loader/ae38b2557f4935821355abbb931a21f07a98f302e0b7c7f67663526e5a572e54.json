{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\player\\\\Documents\\\\GitHub\\\\synask-app\\\\src\\\\pages\\\\settings\\\\AccentColorContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AccentColorContext = /*#__PURE__*/createContext();\nexport const AccentColorProvider = ({\n  children\n}) => {\n  _s();\n  const defaultColor = '#000000'; // Дефолтный цвет акцента\n  const savedColor = localStorage.getItem('settings_accent_color') || defaultColor;\n  const [accentColor, setAccentColor] = useState(savedColor);\n  useEffect(() => {\n    const savedColor = localStorage.getItem('settings_accent_color');\n    if (savedColor) {\n      setAccentColor(savedColor);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AccentColorContext.Provider, {\n    value: {\n      accentColor,\n      setAccentColor\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_s(AccentColorProvider, \"6llw/f37e6+Vg9fxdIQUPvbkiQo=\");\n_c = AccentColorProvider;\nexport default AccentColorContext;\nvar _c;\n$RefreshReg$(_c, \"AccentColorProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","AccentColorContext","AccentColorProvider","children","_s","defaultColor","savedColor","localStorage","getItem","accentColor","setAccentColor","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/player/Documents/GitHub/synask-app/src/pages/settings/AccentColorContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\nconst AccentColorContext = createContext();\r\n\r\nexport const AccentColorProvider = ({ children }) => {\r\n    const defaultColor = '#000000'; // Дефолтный цвет акцента\r\n    const savedColor = localStorage.getItem('settings_accent_color') || defaultColor;\r\n    const [accentColor, setAccentColor] = useState(savedColor);\r\n\r\n    useEffect(() => {\r\n        const savedColor = localStorage.getItem('settings_accent_color');\r\n        if (savedColor) {\r\n            setAccentColor(savedColor);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <AccentColorContext.Provider value={{ accentColor, setAccentColor }}>\r\n            {children}\r\n        </AccentColorContext.Provider>\r\n    );\r\n};\r\n\r\nexport default AccentColorContext;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,kBAAkB,gBAAGL,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMM,mBAAmB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACjD,MAAMC,YAAY,GAAG,SAAS,CAAC,CAAC;EAChC,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,uBAAuB,CAAC,IAAIH,YAAY;EAChF,MAAM,CAACI,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAACS,UAAU,CAAC;EAE1DR,SAAS,CAAC,MAAM;IACZ,MAAMQ,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,uBAAuB,CAAC;IAChE,IAAIF,UAAU,EAAE;MACZI,cAAc,CAACJ,UAAU,CAAC;IAC9B;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIN,OAAA,CAACC,kBAAkB,CAACU,QAAQ;IAACC,KAAK,EAAE;MAAEH,WAAW;MAAEC;IAAe,CAAE;IAAAP,QAAA,EAC/DA;EAAQ;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACgB,CAAC;AAEtC,CAAC;AAACZ,EAAA,CAjBWF,mBAAmB;AAAAe,EAAA,GAAnBf,mBAAmB;AAmBhC,eAAeD,kBAAkB;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}