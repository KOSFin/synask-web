{"ast":null,"code":"const isRequired = param => {\n  let result = true;\n  if (typeof param === 'string' && param.trim() === '' || param === undefined || param == null) {\n    result = false;\n  }\n  return {\n    result,\n    makeError: valueName => `${valueName} is required parameter`\n  };\n};\nconst isNumber = param => {\n  return {\n    result: ['number', 'string'].includes(typeof param) && !isNaN(parseInt(param)),\n    makeError: valueName => `${valueName} should be number`\n  };\n};\nconst isValidHeight = param => {\n  let result = param !== undefined && param.height !== undefined && isNumber(param.height) && param.height < 57 && param.height > 31 || param === undefined || param.height === undefined;\n  return {\n    result,\n    makeError: () => 'The height should correspond to the range from 32 to 56'\n  };\n};\nconst isNotEmptyOAuthList = param => {\n  return {\n    result: param?.length && param.length >= 1,\n    makeError: () => 'OAuth list can\\'t be empty'\n  };\n};\nexport { isNotEmptyOAuthList, isNumber, isRequired, isValidHeight };","map":{"version":3,"names":["isRequired","param","result","trim","undefined","makeError","valueName","isNumber","includes","isNaN","parseInt","isValidHeight","height","isNotEmptyOAuthList","length"],"sources":["C:/Users/player/Documents/GitHub/synask-app/node_modules/@vkid/sdk/dist-sdk/esm/core/validator/rules.js"],"sourcesContent":["const isRequired = (param)=>{\n    let result = true;\n    if (typeof param === 'string' && param.trim() === '' || param === undefined || param == null) {\n        result = false;\n    }\n    return {\n        result,\n        makeError: (valueName)=>`${valueName} is required parameter`\n    };\n};\nconst isNumber = (param)=>{\n    return {\n        result: [\n            'number',\n            'string'\n        ].includes(typeof param) && !isNaN(parseInt(param)),\n        makeError: (valueName)=>`${valueName} should be number`\n    };\n};\nconst isValidHeight = (param)=>{\n    let result = param !== undefined && param.height !== undefined && isNumber(param.height) && param.height < 57 && param.height > 31 || param === undefined || param.height === undefined;\n    return {\n        result,\n        makeError: ()=>'The height should correspond to the range from 32 to 56'\n    };\n};\nconst isNotEmptyOAuthList = (param)=>{\n    return {\n        result: param?.length && param.length >= 1,\n        makeError: ()=>'OAuth list can\\'t be empty'\n    };\n};\n\nexport { isNotEmptyOAuthList, isNumber, isRequired, isValidHeight };\n"],"mappings":"AAAA,MAAMA,UAAU,GAAIC,KAAK,IAAG;EACxB,IAAIC,MAAM,GAAG,IAAI;EACjB,IAAI,OAAOD,KAAK,KAAK,QAAQ,IAAIA,KAAK,CAACE,IAAI,CAAC,CAAC,KAAK,EAAE,IAAIF,KAAK,KAAKG,SAAS,IAAIH,KAAK,IAAI,IAAI,EAAE;IAC1FC,MAAM,GAAG,KAAK;EAClB;EACA,OAAO;IACHA,MAAM;IACNG,SAAS,EAAGC,SAAS,IAAG,GAAGA,SAAS;EACxC,CAAC;AACL,CAAC;AACD,MAAMC,QAAQ,GAAIN,KAAK,IAAG;EACtB,OAAO;IACHC,MAAM,EAAE,CACJ,QAAQ,EACR,QAAQ,CACX,CAACM,QAAQ,CAAC,OAAOP,KAAK,CAAC,IAAI,CAACQ,KAAK,CAACC,QAAQ,CAACT,KAAK,CAAC,CAAC;IACnDI,SAAS,EAAGC,SAAS,IAAG,GAAGA,SAAS;EACxC,CAAC;AACL,CAAC;AACD,MAAMK,aAAa,GAAIV,KAAK,IAAG;EAC3B,IAAIC,MAAM,GAAGD,KAAK,KAAKG,SAAS,IAAIH,KAAK,CAACW,MAAM,KAAKR,SAAS,IAAIG,QAAQ,CAACN,KAAK,CAACW,MAAM,CAAC,IAAIX,KAAK,CAACW,MAAM,GAAG,EAAE,IAAIX,KAAK,CAACW,MAAM,GAAG,EAAE,IAAIX,KAAK,KAAKG,SAAS,IAAIH,KAAK,CAACW,MAAM,KAAKR,SAAS;EACvL,OAAO;IACHF,MAAM;IACNG,SAAS,EAAEA,CAAA,KAAI;EACnB,CAAC;AACL,CAAC;AACD,MAAMQ,mBAAmB,GAAIZ,KAAK,IAAG;EACjC,OAAO;IACHC,MAAM,EAAED,KAAK,EAAEa,MAAM,IAAIb,KAAK,CAACa,MAAM,IAAI,CAAC;IAC1CT,SAAS,EAAEA,CAAA,KAAI;EACnB,CAAC;AACL,CAAC;AAED,SAASQ,mBAAmB,EAAEN,QAAQ,EAAEP,UAAU,EAAEW,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}