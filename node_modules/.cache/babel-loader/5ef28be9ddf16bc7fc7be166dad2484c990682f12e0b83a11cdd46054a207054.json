{"ast":null,"code":"import React,{useState,useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const NfcComponent=()=>{const[logs,setLogs]=useState([]);useEffect(()=>{if('NDEFReader'in window){const ndef=new window.NDEFReader();const scanNFC=async()=>{try{await ndef.scan();addLog(\"NFC сканирование началось успешно.\");ndef.addEventListener(\"reading\",event=>{const decoder=new TextDecoder();for(const record of event.message.records){const logMessage=\"\\u0422\\u0438\\u043F \\u0437\\u0430\\u043F\\u0438\\u0441\\u0438: \".concat(record.recordType,\", MIME \\u0442\\u0438\\u043F: \").concat(record.mediaType,\", \\u0414\\u0430\\u043D\\u043D\\u044B\\u0435: \").concat(decoder.decode(record.data));addLog(logMessage);}});}catch(error){addLog(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(error));}};scanNFC();}else{addLog(\"Web NFC не поддерживается.\");}},[]);const addLog=message=>{setLogs(prevLogs=>[...prevLogs,message]);};return/*#__PURE__*/_jsxs(\"div\",{style:{padding:'20px'},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Tap NFC Tag\"}),/*#__PURE__*/_jsx(\"div\",{style:{fontFamily:'monospace',whiteSpace:'pre-wrap',color:'white'},children:logs.map((log,index)=>/*#__PURE__*/_jsx(\"div\",{children:log},index))})]});};export default NfcComponent;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","NfcComponent","logs","setLogs","window","ndef","NDEFReader","scanNFC","scan","addLog","addEventListener","event","decoder","TextDecoder","record","message","records","logMessage","concat","recordType","mediaType","decode","data","error","prevLogs","style","padding","children","fontFamily","whiteSpace","color","map","log","index"],"sources":["C:/Users/player/Documents/GitHub/synask-app/src/pages/Swap.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst NfcComponent = () => {\r\n  const [logs, setLogs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if ('NDEFReader' in window) {\r\n      const ndef = new window.NDEFReader();\r\n\r\n      const scanNFC = async () => {\r\n        try {\r\n          await ndef.scan();\r\n          addLog(\"NFC сканирование началось успешно.\");\r\n\r\n          ndef.addEventListener(\"reading\", event => {\r\n            const decoder = new TextDecoder();\r\n            for (const record of event.message.records) {\r\n              const logMessage = `Тип записи: ${record.recordType}, MIME тип: ${record.mediaType}, Данные: ${decoder.decode(record.data)}`;\r\n              addLog(logMessage);\r\n            }\r\n          });\r\n        } catch (error) {\r\n          addLog(`Ошибка: ${error}`);\r\n        }\r\n      };\r\n\r\n      scanNFC();\r\n    } else {\r\n      addLog(\"Web NFC не поддерживается.\");\r\n    }\r\n  }, []);\r\n\r\n  const addLog = (message) => {\r\n    setLogs(prevLogs => [...prevLogs, message]);\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '20px' }}>\r\n      <h1>Tap NFC Tag</h1>\r\n      <div style={{ fontFamily: 'monospace', whiteSpace: 'pre-wrap', color: 'white'}}>\r\n        {logs.map((log, index) => (\r\n          <div key={index}>{log}</div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NfcComponent;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnD,KAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,CACzB,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CAEpCC,SAAS,CAAC,IAAM,CACd,GAAI,YAAY,EAAI,CAAAQ,MAAM,CAAE,CAC1B,KAAM,CAAAC,IAAI,CAAG,GAAI,CAAAD,MAAM,CAACE,UAAU,CAAC,CAAC,CAEpC,KAAM,CAAAC,OAAO,CAAG,KAAAA,CAAA,GAAY,CAC1B,GAAI,CACF,KAAM,CAAAF,IAAI,CAACG,IAAI,CAAC,CAAC,CACjBC,MAAM,CAAC,oCAAoC,CAAC,CAE5CJ,IAAI,CAACK,gBAAgB,CAAC,SAAS,CAAEC,KAAK,EAAI,CACxC,KAAM,CAAAC,OAAO,CAAG,GAAI,CAAAC,WAAW,CAAC,CAAC,CACjC,IAAK,KAAM,CAAAC,MAAM,GAAI,CAAAH,KAAK,CAACI,OAAO,CAACC,OAAO,CAAE,CAC1C,KAAM,CAAAC,UAAU,6DAAAC,MAAA,CAAkBJ,MAAM,CAACK,UAAU,gCAAAD,MAAA,CAAeJ,MAAM,CAACM,SAAS,6CAAAF,MAAA,CAAaN,OAAO,CAACS,MAAM,CAACP,MAAM,CAACQ,IAAI,CAAC,CAAE,CAC5Hb,MAAM,CAACQ,UAAU,CAAC,CACpB,CACF,CAAC,CAAC,CACJ,CAAE,MAAOM,KAAK,CAAE,CACdd,MAAM,0CAAAS,MAAA,CAAYK,KAAK,CAAE,CAAC,CAC5B,CACF,CAAC,CAEDhB,OAAO,CAAC,CAAC,CACX,CAAC,IAAM,CACLE,MAAM,CAAC,4BAA4B,CAAC,CACtC,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAA,MAAM,CAAIM,OAAO,EAAK,CAC1BZ,OAAO,CAACqB,QAAQ,EAAI,CAAC,GAAGA,QAAQ,CAAET,OAAO,CAAC,CAAC,CAC7C,CAAC,CAED,mBACEf,KAAA,QAAKyB,KAAK,CAAE,CAAEC,OAAO,CAAE,MAAO,CAAE,CAAAC,QAAA,eAC9B7B,IAAA,OAAA6B,QAAA,CAAI,aAAW,CAAI,CAAC,cACpB7B,IAAA,QAAK2B,KAAK,CAAE,CAAEG,UAAU,CAAE,WAAW,CAAEC,UAAU,CAAE,UAAU,CAAEC,KAAK,CAAE,OAAO,CAAE,CAAAH,QAAA,CAC5EzB,IAAI,CAAC6B,GAAG,CAAC,CAACC,GAAG,CAAEC,KAAK,gBACnBnC,IAAA,QAAA6B,QAAA,CAAkBK,GAAG,EAAXC,KAAiB,CAC5B,CAAC,CACC,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAhC,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}