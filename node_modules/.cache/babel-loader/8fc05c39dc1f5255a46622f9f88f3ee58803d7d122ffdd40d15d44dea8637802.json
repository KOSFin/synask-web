{"ast":null,"code":"import React,{useContext,useMemo}from'react';import{useNavigate}from'react-router-dom';// Импортируем useNavigate\nimport styles from'../styles/ChatList.module.css';import ChatContext from'../../../components/ChatContext';import UserContext from'../../../components/UserContext';import ChatItem from'./ChatItem';// Импортируем компонент ChatItem\nimport{jsx as _jsx}from\"react/jsx-runtime\";const ChatList=_ref=>{let{searchTerm}=_ref;const{chatList,newMessagesCount}=useContext(ChatContext);const{userId}=useContext(UserContext);// Получаем userId из контекста пользователя\nconst navigate=useNavigate();// Используем navigate для изменения URL\nconst filteredChats=useMemo(()=>{const lowerCaseSearchTerm=searchTerm.toLowerCase();return chatList.filter(chat=>{if(chat.is_group){return chat.name&&chat.name.toLowerCase().includes(lowerCaseSearchTerm);}else if(chat.membersInfo&&chat.membersInfo.length>1){// Получаем собеседника, исключая текущего пользователя\nconst otherUser=chat.membersInfo.find(member=>member.auth_id!==userId);console.log('Other User:',otherUser);// Если собеседник найден, проверяем его данные на наличие в поиске\nif(otherUser){return\"\".concat(otherUser.first_name,\" \").concat(otherUser.last_name).toLowerCase().includes(lowerCaseSearchTerm);}}return false;});},[chatList,searchTerm,userId]);// Добавляем userId в зависимости\nconst selectChat=chatId=>{console.log('Selected Chat Id:',chatId);// Меняем параметр id в URL на айди выбранного чата\nnavigate(\"?id=\".concat(chatId),{replace:true});};return/*#__PURE__*/_jsx(\"div\",{className:styles.chatList,children:filteredChats.map(chat=>/*#__PURE__*/_jsx(ChatItem,{chat:chat,selectChat:selectChat,newMessagesCount:newMessagesCount},chat.id))});};export default ChatList;","map":{"version":3,"names":["React","useContext","useMemo","useNavigate","styles","ChatContext","UserContext","ChatItem","jsx","_jsx","ChatList","_ref","searchTerm","chatList","newMessagesCount","userId","navigate","filteredChats","lowerCaseSearchTerm","toLowerCase","filter","chat","is_group","name","includes","membersInfo","length","otherUser","find","member","auth_id","console","log","concat","first_name","last_name","selectChat","chatId","replace","className","children","map","id"],"sources":["C:/Users/player/Documents/GitHub/synask-app/src/pages/messenger/components/ChatList.js"],"sourcesContent":["import React, { useContext, useMemo } from 'react';\r\nimport { useNavigate } from 'react-router-dom';  // Импортируем useNavigate\r\nimport styles from '../styles/ChatList.module.css';\r\nimport ChatContext from '../../../components/ChatContext';\r\nimport UserContext from '../../../components/UserContext';\r\nimport ChatItem from './ChatItem';  // Импортируем компонент ChatItem\r\n\r\nconst ChatList = ({ searchTerm }) => {\r\n  const { chatList, newMessagesCount } = useContext(ChatContext);\r\n  const { userId } = useContext(UserContext);  // Получаем userId из контекста пользователя\r\n  const navigate = useNavigate();  // Используем navigate для изменения URL\r\n\r\n  const filteredChats = useMemo(() => {\r\n    const lowerCaseSearchTerm = searchTerm.toLowerCase();\r\n    return chatList.filter(chat => {\r\n      if (chat.is_group) {\r\n        return chat.name && chat.name.toLowerCase().includes(lowerCaseSearchTerm);\r\n      } else if (chat.membersInfo && chat.membersInfo.length > 1) {\r\n        // Получаем собеседника, исключая текущего пользователя\r\n        const otherUser = chat.membersInfo.find(member => member.auth_id !== userId);\r\n        console.log('Other User:', otherUser); // Если собеседник найден, проверяем его данные на наличие в поиске\r\n        if (otherUser) {\r\n          return `${otherUser.first_name} ${otherUser.last_name}`.toLowerCase().includes(lowerCaseSearchTerm);\r\n        }\r\n      }\r\n      return false;\r\n    });\r\n  }, [chatList, searchTerm, userId]);  // Добавляем userId в зависимости\r\n\r\n  const selectChat = (chatId) => {\r\n    console.log('Selected Chat Id:', chatId);\r\n\r\n    // Меняем параметр id в URL на айди выбранного чата\r\n    navigate(`?id=${chatId}`, { replace: true });\r\n  };\r\n\r\n  return (\r\n    <div className={styles.chatList}>\r\n      {filteredChats.map(chat => (\r\n        <ChatItem\r\n          key={chat.id}\r\n          chat={chat}\r\n          selectChat={selectChat}\r\n          newMessagesCount={newMessagesCount}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatList;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,UAAU,CAAEC,OAAO,KAAQ,OAAO,CAClD,OAASC,WAAW,KAAQ,kBAAkB,CAAG;AACjD,MAAO,CAAAC,MAAM,KAAM,+BAA+B,CAClD,MAAO,CAAAC,WAAW,KAAM,iCAAiC,CACzD,MAAO,CAAAC,WAAW,KAAM,iCAAiC,CACzD,MAAO,CAAAC,QAAQ,KAAM,YAAY,CAAG;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBAEpC,KAAM,CAAAC,QAAQ,CAAGC,IAAA,EAAoB,IAAnB,CAAEC,UAAW,CAAC,CAAAD,IAAA,CAC9B,KAAM,CAAEE,QAAQ,CAAEC,gBAAiB,CAAC,CAAGb,UAAU,CAACI,WAAW,CAAC,CAC9D,KAAM,CAAEU,MAAO,CAAC,CAAGd,UAAU,CAACK,WAAW,CAAC,CAAG;AAC7C,KAAM,CAAAU,QAAQ,CAAGb,WAAW,CAAC,CAAC,CAAG;AAEjC,KAAM,CAAAc,aAAa,CAAGf,OAAO,CAAC,IAAM,CAClC,KAAM,CAAAgB,mBAAmB,CAAGN,UAAU,CAACO,WAAW,CAAC,CAAC,CACpD,MAAO,CAAAN,QAAQ,CAACO,MAAM,CAACC,IAAI,EAAI,CAC7B,GAAIA,IAAI,CAACC,QAAQ,CAAE,CACjB,MAAO,CAAAD,IAAI,CAACE,IAAI,EAAIF,IAAI,CAACE,IAAI,CAACJ,WAAW,CAAC,CAAC,CAACK,QAAQ,CAACN,mBAAmB,CAAC,CAC3E,CAAC,IAAM,IAAIG,IAAI,CAACI,WAAW,EAAIJ,IAAI,CAACI,WAAW,CAACC,MAAM,CAAG,CAAC,CAAE,CAC1D;AACA,KAAM,CAAAC,SAAS,CAAGN,IAAI,CAACI,WAAW,CAACG,IAAI,CAACC,MAAM,EAAIA,MAAM,CAACC,OAAO,GAAKf,MAAM,CAAC,CAC5EgB,OAAO,CAACC,GAAG,CAAC,aAAa,CAAEL,SAAS,CAAC,CAAE;AACvC,GAAIA,SAAS,CAAE,CACb,MAAO,GAAAM,MAAA,CAAGN,SAAS,CAACO,UAAU,MAAAD,MAAA,CAAIN,SAAS,CAACQ,SAAS,EAAGhB,WAAW,CAAC,CAAC,CAACK,QAAQ,CAACN,mBAAmB,CAAC,CACrG,CACF,CACA,MAAO,MAAK,CACd,CAAC,CAAC,CACJ,CAAC,CAAE,CAACL,QAAQ,CAAED,UAAU,CAAEG,MAAM,CAAC,CAAC,CAAG;AAErC,KAAM,CAAAqB,UAAU,CAAIC,MAAM,EAAK,CAC7BN,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAEK,MAAM,CAAC,CAExC;AACArB,QAAQ,QAAAiB,MAAA,CAAQI,MAAM,EAAI,CAAEC,OAAO,CAAE,IAAK,CAAC,CAAC,CAC9C,CAAC,CAED,mBACE7B,IAAA,QAAK8B,SAAS,CAAEnC,MAAM,CAACS,QAAS,CAAA2B,QAAA,CAC7BvB,aAAa,CAACwB,GAAG,CAACpB,IAAI,eACrBZ,IAAA,CAACF,QAAQ,EAEPc,IAAI,CAAEA,IAAK,CACXe,UAAU,CAAEA,UAAW,CACvBtB,gBAAgB,CAAEA,gBAAiB,EAH9BO,IAAI,CAACqB,EAIX,CACF,CAAC,CACC,CAAC,CAEV,CAAC,CAED,cAAe,CAAAhC,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}