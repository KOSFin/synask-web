{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\player\\\\Documents\\\\GitHub\\\\synask-app\\\\src\\\\pages\\\\Check.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { createClient } from '@supabase/supabase-js';\nimport styles from './AccountSetupPage.module.css';\nimport l from './Loader.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst supabaseClient = createClient('https://cnicyffiqvdhgyzkogtl.supabase.co', 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImNuaWN5ZmZpcXZkaGd5emtvZ3RsIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MDc3NDM2NzcsImV4cCI6MjAyMzMxOTY3N30.bZoapdV-TJiq42uJaOPGBfPz91ULReQ1_ahXpUHNaJ8');\nconst AccountSetupPage = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [username, setUsername] = useState('');\n  const [usernameAvailable, setUsernameAvailable] = useState('check');\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: ''\n  });\n  const handleChange = (field, value) => {\n    setFormData(prevState => ({\n      ...prevState,\n      [field]: value\n    }));\n  };\n  const handleUsernameChange = e => {\n    const value = e.target.value.replace(/[^a-zA-Z0-9а-яА-Я]/g, '');\n    setUsername(value);\n    setUsernameAvailable('check');\n  };\n  const checkUsernameAvailability = async username => {\n    const {\n      data,\n      error\n    } = await supabaseClient.from('users_public_information').select('id').eq('username', username).single();\n    if (error && error.code !== 'PGRST116') {\n      setError(`Error checking username: ${error.message}`);\n    } else {\n      setUsernameAvailable(!data);\n    }\n  };\n  useEffect(() => {\n    if (username) {\n      const timer = setTimeout(() => {\n        checkUsernameAvailability(username);\n      }, 300);\n      return () => clearTimeout(timer);\n    }\n  }, [username]);\n  const setupAccount = async () => {\n    setLoading(true);\n    try {\n      const {\n        data: {\n          user\n        },\n        error: userError\n      } = await supabaseClient.auth.getUser();\n      if (userError) throw userError;\n      if (user) {\n        let {\n          data: publicData,\n          error: publicError\n        } = await supabaseClient.from('users_public_information').select('*').eq('auth_id', user.id).single();\n        if (publicError && publicError.code !== 'PGRST116') throw publicError;\n        const genderValue = parseInt(user.user_metadata.gender);\n        if (!publicData) {\n          const updates = {\n            auth_id: user.id,\n            username: username || '',\n            first_name: formData.firstName || user.user_metadata.firstName || '',\n            last_name: formData.lastName || user.user_metadata.lastName || '',\n            gender: genderValue,\n            created_at: new Date()\n          };\n          if (Object.values(updates).some(value => value === '')) {\n            setLoading(false);\n            return;\n          }\n          if (usernameAvailable !== true) {\n            setError('Username is not available. Please choose another one.');\n            setLoading(false);\n            return;\n          }\n          let {\n            error: upsertError\n          } = await supabaseClient.from('users_public_information').upsert(updates, {\n            onConflict: ['auth_id']\n          });\n          if (upsertError) throw upsertError;\n        }\n        const updatedProfile = {\n          first_name: formData.firstName || user.user_metadata.firstName || '',\n          last_name: formData.lastName || user.user_metadata.lastName || '',\n          username: username || ''\n        };\n        const {\n          dataUpdate,\n          errorUpdate\n        } = await supabaseClient.auth.updateUser({\n          data: {\n            firstName: updatedProfile.first_name,\n            lastName: updatedProfile.last_name,\n            nickname: updatedProfile.username\n          }\n        });\n        if (errorUpdate) throw errorUpdate;\n        window.location.href = '/';\n      } else {\n        window.location.href = '/login.html';\n      }\n    } catch (err) {\n      setError(`Error: ${err.message}`);\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    const fetchUser = async () => {\n      setLoading(true);\n      const {\n        data: {\n          user\n        },\n        error: userError\n      } = await supabaseClient.auth.getUser();\n      if (userError) {\n        setError(`Error fetching user: ${userError.message}`);\n        setLoading(false);\n        return;\n      }\n      if (user) {\n        setFormData({\n          firstName: user.user_metadata.firstName || '',\n          lastName: user.user_metadata.lastName || ''\n        });\n        setLoading(false);\n      } else {\n        window.location.href = '/login.html';\n      }\n    };\n    fetchUser();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: l.spinner,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.accountSetupPage,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0417\\u0430\\u0432\\u0435\\u0440\\u0448\\u0435\\u043D\\u0438\\u0435 \\u0421\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u044F \\u0410\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u042D\\u0442\\u0430 \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0430 \\u0437\\u0430\\u0432\\u0435\\u0440\\u0448\\u0430\\u0435\\u0442 \\u0441\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u0435 \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442\\u0430 \\u0438 \\u0434\\u0430\\u0435\\u0442 \\u0432\\u0430\\u043C \\u043F\\u0443\\u0431\\u043B\\u0438\\u0447\\u043D\\u0443\\u044E \\u0441\\u0441\\u044B\\u043B\\u043A\\u0443.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.error,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      className: styles.form,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.settingItem,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\u041D\\u0438\\u043A:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: handleUsernameChange,\n          className: `${styles.input} ${usernameAvailable === false ? styles.errorInput : formData.username !== username ? styles.changedInput : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), formData.username === username && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.savedUsername,\n          children: \"\\u042D\\u0442\\u043E\\u0442 \\u043D\\u0438\\u043A \\u0443\\u0436\\u0435 \\u0441\\u0442\\u043E\\u0438\\u0442 \\u0443 \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 15\n        }, this), usernameAvailable === 'check' && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u041F\\u0440\\u043E\\u0432\\u0435\\u0440\\u043A\\u0430...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 47\n        }, this), usernameAvailable === true && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'green'\n          },\n          children: \"\\u042D\\u0442\\u043E\\u0442 \\u043D\\u0438\\u043A \\u0441\\u0432\\u043E\\u0431\\u043E\\u0434\\u0435\\u043D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 44\n        }, this), usernameAvailable === false && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'red'\n          },\n          children: \"\\u042D\\u0442\\u043E\\u0442 \\u043D\\u0438\\u043A \\u0437\\u0430\\u043D\\u044F\\u0442\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 45\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.inputContainer,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"firstName\",\n          name: \"firstName\",\n          placeholder: \"\\u0418\\u043C\\u044F\",\n          value: formData.firstName,\n          onChange: e => handleChange('firstName', e.target.value),\n          required: true,\n          className: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.inputContainer,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"lastName\",\n          name: \"lastName\",\n          placeholder: \"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F\",\n          value: formData.lastName,\n          onChange: e => handleChange('lastName', e.target.value),\n          required: true,\n          className: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: setupAccount,\n        className: styles.button,\n        children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n};\n_s(AccountSetupPage, \"bGXoeFTraYtLZFQqJzgThPgIG/U=\");\n_c = AccountSetupPage;\nexport default AccountSetupPage;\nvar _c;\n$RefreshReg$(_c, \"AccountSetupPage\");","map":{"version":3,"names":["React","useEffect","useState","createClient","styles","l","jsxDEV","_jsxDEV","supabaseClient","AccountSetupPage","_s","error","setError","loading","setLoading","username","setUsername","usernameAvailable","setUsernameAvailable","formData","setFormData","firstName","lastName","handleChange","field","value","prevState","handleUsernameChange","e","target","replace","checkUsernameAvailability","data","from","select","eq","single","code","message","timer","setTimeout","clearTimeout","setupAccount","user","userError","auth","getUser","publicData","publicError","id","genderValue","parseInt","user_metadata","gender","updates","auth_id","first_name","last_name","created_at","Date","Object","values","some","upsertError","upsert","onConflict","updatedProfile","dataUpdate","errorUpdate","updateUser","nickname","window","location","href","err","fetchUser","className","spinner","children","fileName","_jsxFileName","lineNumber","columnNumber","accountSetupPage","form","settingItem","type","onChange","input","errorInput","changedInput","savedUsername","style","color","inputContainer","name","placeholder","required","onClick","button","_c","$RefreshReg$"],"sources":["C:/Users/player/Documents/GitHub/synask-app/src/pages/Check.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { createClient } from '@supabase/supabase-js';\r\nimport styles from './AccountSetupPage.module.css';\r\nimport l from './Loader.module.css';\r\n\r\nconst supabaseClient = createClient('https://cnicyffiqvdhgyzkogtl.supabase.co', 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImNuaWN5ZmZpcXZkaGd5emtvZ3RsIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MDc3NDM2NzcsImV4cCI6MjAyMzMxOTY3N30.bZoapdV-TJiq42uJaOPGBfPz91ULReQ1_ahXpUHNaJ8');\r\n\r\nconst AccountSetupPage = () => {\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [username, setUsername] = useState('');\r\n  const [usernameAvailable, setUsernameAvailable] = useState('check');\r\n  const [formData, setFormData] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n  });\r\n\r\n  const handleChange = (field, value) => {\r\n    setFormData(prevState => ({ ...prevState, [field]: value }));\r\n  };\r\n\r\n  const handleUsernameChange = (e) => {\r\n    const value = e.target.value.replace(/[^a-zA-Z0-9а-яА-Я]/g, '');\r\n    setUsername(value);\r\n    setUsernameAvailable('check');\r\n  };\r\n\r\n  const checkUsernameAvailability = async (username) => {\r\n    const { data, error } = await supabaseClient\r\n      .from('users_public_information')\r\n      .select('id')\r\n      .eq('username', username)\r\n      .single();\r\n\r\n    if (error && error.code !== 'PGRST116') {\r\n      setError(`Error checking username: ${error.message}`);\r\n    } else {\r\n      setUsernameAvailable(!data);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (username) {\r\n      const timer = setTimeout(() => {\r\n        checkUsernameAvailability(username);\r\n      }, 300);\r\n\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [username]);\r\n\r\n  const setupAccount = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const { data: { user }, error: userError } = await supabaseClient.auth.getUser();\r\n\r\n      if (userError) throw userError;\r\n\r\n      if (user) {\r\n        let { data: publicData, error: publicError } = await supabaseClient\r\n          .from('users_public_information')\r\n          .select('*')\r\n          .eq('auth_id', user.id)\r\n          .single();\r\n\r\n        if (publicError && publicError.code !== 'PGRST116') throw publicError;\r\n\r\n        const genderValue = parseInt(user.user_metadata.gender);\r\n\r\n        if (!publicData) {\r\n          const updates = {\r\n            auth_id: user.id,\r\n            username: username || '',\r\n            first_name: formData.firstName || user.user_metadata.firstName || '',\r\n            last_name: formData.lastName || user.user_metadata.lastName || '',\r\n            gender: genderValue,\r\n            created_at: new Date(),\r\n          };\r\n\r\n          if (Object.values(updates).some(value => value === '')) {\r\n            setLoading(false);\r\n            return;\r\n          }\r\n\r\n          if (usernameAvailable !== true) {\r\n            setError('Username is not available. Please choose another one.');\r\n            setLoading(false);\r\n            return;\r\n          }\r\n\r\n          let { error: upsertError } = await supabaseClient\r\n            .from('users_public_information')\r\n            .upsert(updates, { onConflict: ['auth_id'] });\r\n\r\n          if (upsertError) throw upsertError;\r\n        }\r\n\r\n        const updatedProfile = {\r\n          first_name: formData.firstName || user.user_metadata.firstName || '',\r\n          last_name: formData.lastName || user.user_metadata.lastName || '',\r\n          username: username || '',\r\n        };\r\n\r\n        const { dataUpdate, errorUpdate } = await supabaseClient.auth.updateUser({\r\n          data: {\r\n            firstName: updatedProfile.first_name,\r\n            lastName: updatedProfile.last_name,\r\n            nickname: updatedProfile.username,\r\n          }\r\n        });\r\n\r\n        if (errorUpdate) throw errorUpdate;\r\n\r\n        window.location.href = '/';\r\n      } else {\r\n        window.location.href = '/login.html';\r\n      }\r\n    } catch (err) {\r\n      setError(`Error: ${err.message}`);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      setLoading(true);\r\n      const { data: { user }, error: userError } = await supabaseClient.auth.getUser();\r\n\r\n      if (userError) {\r\n        setError(`Error fetching user: ${userError.message}`);\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      if (user) {\r\n        setFormData({\r\n          firstName: user.user_metadata.firstName || '',\r\n          lastName: user.user_metadata.lastName || '',\r\n        });\r\n        setLoading(false);\r\n      } else {\r\n        window.location.href = '/login.html';\r\n      }\r\n    };\r\n\r\n    fetchUser();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className={l.spinner}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={styles.accountSetupPage}>\r\n      <h1>Завершение Создания Аккаунта</h1>\r\n      <p>Эта страница завершает создание аккаунта и дает вам публичную ссылку.</p>\r\n      {error ? (\r\n        <div className={styles.error}>{error}</div>\r\n      ) : (\r\n        <form className={styles.form}>\r\n          <div className={styles.settingItem}>\r\n            <label>Ник:</label>\r\n            <input\r\n              type=\"text\"\r\n              value={username}\r\n              onChange={handleUsernameChange}\r\n              className={`${styles.input} ${usernameAvailable === false ? styles.errorInput : (formData.username !== username ? styles.changedInput : '')}`}\r\n            />\r\n            {formData.username === username && (\r\n              <div className={styles.savedUsername}>Этот ник уже стоит у пользователя</div>\r\n            )}\r\n            {usernameAvailable === 'check' && <span>Проверка...</span>}\r\n            {usernameAvailable === true && <span style={{ color: 'green' }}>Этот ник свободен</span>}\r\n            {usernameAvailable === false && <span style={{ color: 'red' }}>Этот ник занят</span>}\r\n          </div>\r\n          <div className={styles.inputContainer}>\r\n            <input\r\n              type=\"text\"\r\n              id=\"firstName\"\r\n              name=\"firstName\"\r\n              placeholder=\"Имя\"\r\n              value={formData.firstName}\r\n              onChange={(e) => handleChange('firstName', e.target.value)}\r\n              required\r\n              className={styles.input}\r\n            />\r\n          </div>\r\n          <div className={styles.inputContainer}>\r\n            <input\r\n              type=\"text\"\r\n              id=\"lastName\"\r\n              name=\"lastName\"\r\n              placeholder=\"Фамилия\"\r\n              value={formData.lastName}\r\n              onChange={(e) => handleChange('lastName', e.target.value)}\r\n              required\r\n              className={styles.input}\r\n            />\r\n          </div>\r\n          <button type=\"button\" onClick={setupAccount} className={styles.button}>Сохранить</button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccountSetupPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}