{"ast":null,"code":"import React,{useState,useEffect,useContext}from'react';import axios from'axios';import SearchBar from'./SearchBar';import TrackList from'./TrackList';import styles from'./App.module.css';import{useTrack}from'./TrackContext';import AccentColorContext from'../settings/AccentColorContext';import getSupabaseClient from'../config/SupabaseClient';// Инициализация Supabase клиента\nimport load from'../../pages/Loader.module.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const supabase=getSupabaseClient();const App=()=>{const[currentSection,setCurrentSection]=useState('allMusic');const[searchTracks,setSearchTracks]=useState([]);const[recommendedTracks,setRecommendedTracks]=useState([]);const[myMusicIds,setMyMusicIds]=useState([]);const[myMusicTracks,setMyMusicTracks]=useState([]);const{setTrack}=useTrack();const{accentColor}=useContext(AccentColorContext);const[isLoading,setIsLoading]=useState(true);useEffect(()=>{// Загрузка рекомендованных треков\nsetIsLoading(true);const fetchRecommendedTracks=async()=>{try{const response=await axios.get(\"https://www.googleapis.com/youtube/v3/search\",{params:{part:'snippet',q:'music',type:'video',videoCategoryId:'10',maxResults:15,key:'AIzaSyCNaJfGAy9a8LlB8B_A3jSRlNxpq4jsCAI'// Замените на ваш API ключ\n}});setRecommendedTracks(response.data.items);setIsLoading(false);}catch(error){console.error('Error fetching data from YouTube API',error);}};fetchRecommendedTracks();},[]);useEffect(()=>{if(currentSection==='myMusic'){// Загрузка идентификаторов треков из \"Моей музыки\"\nconst fetchMyMusicIds=async()=>{try{// Получение пользователя\nconst{data:{user}}=await supabase.auth.getUser();if(!user){console.error('User not found');return;}// Получение идентификаторов треков из Supabase\nconst{data,error}=await supabase.from('users_public_information').select('my_music').eq('auth_id',user.id).single();if(error){console.error('Error fetching my music from Supabase:',error);return;}// Установка идентификаторов треков в состояние\nconst trackIds=(data===null||data===void 0?void 0:data.my_music)||[];setMyMusicIds(trackIds);// Загрузка полной информации о треках с YouTube\nfetchTracksDetails(trackIds);}catch(error){console.error('Error fetching my music',error);}};fetchMyMusicIds();}},[currentSection]);const fetchTracksDetails=async trackIds=>{try{const response=await axios.get(\"https://www.googleapis.com/youtube/v3/videos\",{params:{part:'snippet',id:trackIds.join(','),key:'AIzaSyCNaJfGAy9a8LlB8B_A3jSRlNxpq4jsCAI'// Замените на ваш API ключ\n}});setMyMusicTracks(response.data.items);}catch(error){console.error('Error fetching track details from YouTube',error);}};const handleSearch=async query=>{try{const response=await axios.get(\"https://www.googleapis.com/youtube/v3/search\",{params:{part:'snippet',q:query,type:'video',videoCategoryId:'10',maxResults:15,key:'AIzaSyCNaJfGAy9a8LlB8B_A3jSRlNxpq4jsCAI'// Замените на ваш API ключ\n}});setSearchTracks(response.data.items);}catch(error){console.error('Error fetching search results',error);}};const handlePlay=(index,isSearch,isMyMusic)=>{let track;if(isMyMusic){track=myMusicTracks[index];}else{track=isSearch?searchTracks[index]:recommendedTracks[index];}if(track){const videoId=track.id.videoId||track.id;const title=track.snippet.title;const artist=track.snippet.channelTitle;setTrack({videoId,title,artist});}};const handleAddToMyMusic=async track=>{try{// Получение пользователя\nconst{data:{user}}=await supabase.auth.getUser();if(!user){console.error('User not found');return;}// Получение текущих идентификаторов треков \"Моей музыки\"\nconst{data,error}=await supabase.from('users_public_information').select('my_music').eq('auth_id',user.id).single();if(error){console.error('Error fetching my music from Supabase:',error);return;}const currentMusicIds=(data===null||data===void 0?void 0:data.my_music)||[];const videoId=track.id.videoId||track.id;const trackExists=currentMusicIds.includes(videoId);if(trackExists){console.warn('Track already exists in \"My Music\"');return;}// Добавление нового идентификатора трека\nconst updatedMusicIds=[...currentMusicIds,videoId];// Обновление записи в Supabase\nconst{error:updateError}=await supabase.from('users_public_information').update({my_music:updatedMusicIds}).eq('auth_id',user.id);if(updateError){console.error('Error updating my music in Supabase:',updateError);}else{setMyMusicIds(updatedMusicIds);fetchTracksDetails(updatedMusicIds);}}catch(error){console.error('Error adding track to my music',error);}};const handleRemoveFromMyMusic=async videoId=>{try{// Получение пользователя\nconst{data:{user}}=await supabase.auth.getUser();if(!user){console.error('User not found');return;}// Получение текущих идентификаторов треков \"Моей музыки\"\nconst{data,error}=await supabase.from('users_public_information').select('my_music').eq('auth_id',user.id).single();if(error){console.error('Error fetching my music from Supabase:',error);return;}const currentMusicIds=(data===null||data===void 0?void 0:data.my_music)||[];const updatedMusicIds=currentMusicIds.filter(id=>id!==videoId);// Обновление записи в Supabase\nconst{error:updateError}=await supabase.from('users_public_information').update({my_music:updatedMusicIds}).eq('auth_id',user.id);if(updateError){console.error('Error updating my music in Supabase:',updateError);}else{setMyMusicIds(updatedMusicIds);fetchTracksDetails(updatedMusicIds);}}catch(error){console.error('Error removing track from my music',error);}};return/*#__PURE__*/_jsxs(\"div\",{className:styles.App,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.sectionSwitch,children:[/*#__PURE__*/_jsx(\"button\",{className:\"\".concat(styles.button,\" \").concat(currentSection==='allMusic'?styles.activeButton:''),onClick:()=>setCurrentSection('allMusic'),children:\"\\u0412\\u0441\\u044F \\u043C\\u0443\\u0437\\u044B\\u043A\\u0430\"}),/*#__PURE__*/_jsx(\"button\",{className:\"\".concat(styles.button,\" \").concat(currentSection==='myMusic'?styles.activeButton:''),onClick:()=>setCurrentSection('myMusic'),children:\"\\u041C\\u043E\\u044F \\u043C\\u0443\\u0437\\u044B\\u043A\\u0430\"})]}),currentSection==='allMusic'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(SearchBar,{onSearch:handleSearch,placeholder:\"\\u041F\\u043E\\u0438\\u0441\\u043A \\u043F\\u043E \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u044E \\u0442\\u0440\\u0435\\u043A\\u0430 \\u0438\\u043B\\u0438 \\u0430\\u0440\\u0442\\u0438\\u0441\\u0442\\u0443\"}),/*#__PURE__*/_jsx(TrackList,{tracks:searchTracks,onPlay:index=>handlePlay(index,true,false),title:\"\\u0420\\u0435\\u0437\\u0443\\u043B\\u044C\\u0442\\u0430\\u0442\\u044B \\u043F\\u043E\\u0438\\u0441\\u043A\\u0430\",isSearchResults:true,onAddToMyMusic:handleAddToMyMusic}),isLoading?/*#__PURE__*/_jsxs(\"div\",{className:load.spinner,children:[/*#__PURE__*/_jsx(\"div\",{}),/*#__PURE__*/_jsx(\"div\",{}),/*#__PURE__*/_jsx(\"div\",{})]}):/*#__PURE__*/_jsx(TrackList,{tracks:recommendedTracks,onPlay:index=>handlePlay(index,false,false),title:\"\\u0420\\u0435\\u043A\\u043E\\u043C\\u0435\\u043D\\u0434\\u0430\\u0446\\u0438\\u0438\"})]}),currentSection==='myMusic'&&/*#__PURE__*/_jsx(TrackList,{tracks:myMusicTracks,title:\"\\u041C\\u043E\\u044F \\u043C\\u0443\\u0437\\u044B\\u043A\\u0430\",onPlay:index=>handlePlay(index,false,true),onRemoveFromMyMusic:handleRemoveFromMyMusic,isMyMusic:true})]});};export default App;","map":{"version":3,"names":["React","useState","useEffect","useContext","axios","SearchBar","TrackList","styles","useTrack","AccentColorContext","getSupabaseClient","load","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","supabase","App","currentSection","setCurrentSection","searchTracks","setSearchTracks","recommendedTracks","setRecommendedTracks","myMusicIds","setMyMusicIds","myMusicTracks","setMyMusicTracks","setTrack","accentColor","isLoading","setIsLoading","fetchRecommendedTracks","response","get","params","part","q","type","videoCategoryId","maxResults","key","data","items","error","console","fetchMyMusicIds","user","auth","getUser","from","select","eq","id","single","trackIds","my_music","fetchTracksDetails","join","handleSearch","query","handlePlay","index","isSearch","isMyMusic","track","videoId","title","snippet","artist","channelTitle","handleAddToMyMusic","currentMusicIds","trackExists","includes","warn","updatedMusicIds","updateError","update","handleRemoveFromMyMusic","filter","className","children","sectionSwitch","concat","button","activeButton","onClick","onSearch","placeholder","tracks","onPlay","isSearchResults","onAddToMyMusic","spinner","onRemoveFromMyMusic"],"sources":["C:/Users/player/Documents/GitHub/synask-app/src/pages/music/App.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport SearchBar from './SearchBar';\r\nimport TrackList from './TrackList';\r\nimport styles from './App.module.css';\r\nimport { useTrack } from './TrackContext';\r\nimport AccentColorContext from '../settings/AccentColorContext';\r\nimport getSupabaseClient from '../config/SupabaseClient'; // Инициализация Supabase клиента\r\nimport load from '../../pages/Loader.module.css';\r\n\r\nconst supabase = getSupabaseClient();\r\n\r\nconst App = () => {\r\n    const [currentSection, setCurrentSection] = useState('allMusic');\r\n    const [searchTracks, setSearchTracks] = useState([]);\r\n    const [recommendedTracks, setRecommendedTracks] = useState([]);\r\n    const [myMusicIds, setMyMusicIds] = useState([]);\r\n    const [myMusicTracks, setMyMusicTracks] = useState([]);\r\n    const { setTrack } = useTrack();\r\n    const { accentColor } = useContext(AccentColorContext);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        // Загрузка рекомендованных треков\r\n        setIsLoading(true);\r\n        const fetchRecommendedTracks = async () => {\r\n            try {\r\n                const response = await axios.get(`https://www.googleapis.com/youtube/v3/search`, {\r\n                    params: {\r\n                        part: 'snippet',\r\n                        q: 'music',\r\n                        type: 'video',\r\n                        videoCategoryId: '10',\r\n                        maxResults: 15,\r\n                        key: 'AIzaSyCNaJfGAy9a8LlB8B_A3jSRlNxpq4jsCAI' // Замените на ваш API ключ\r\n                    }\r\n                });\r\n                setRecommendedTracks(response.data.items);\r\n                setIsLoading(false);\r\n            } catch (error) {\r\n                console.error('Error fetching data from YouTube API', error);\r\n            }\r\n        };\r\n\r\n        fetchRecommendedTracks();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (currentSection === 'myMusic') {\r\n            // Загрузка идентификаторов треков из \"Моей музыки\"\r\n            const fetchMyMusicIds = async () => {\r\n                try {\r\n                    // Получение пользователя\r\n                    const { data: { user } } = await supabase.auth.getUser();\r\n                    if (!user) {\r\n                        console.error('User not found');\r\n                        return;\r\n                    }\r\n\r\n                    // Получение идентификаторов треков из Supabase\r\n                    const { data, error } = await supabase\r\n                        .from('users_public_information')\r\n                        .select('my_music')\r\n                        .eq('auth_id', user.id)\r\n                        .single();\r\n\r\n                    if (error) {\r\n                        console.error('Error fetching my music from Supabase:', error);\r\n                        return;\r\n                    }\r\n\r\n                    // Установка идентификаторов треков в состояние\r\n                    const trackIds = data?.my_music || [];\r\n                    setMyMusicIds(trackIds);\r\n\r\n                    // Загрузка полной информации о треках с YouTube\r\n                    fetchTracksDetails(trackIds);\r\n                } catch (error) {\r\n                    console.error('Error fetching my music', error);\r\n                }\r\n            };\r\n\r\n            fetchMyMusicIds();\r\n        }\r\n    }, [currentSection]);\r\n\r\n    const fetchTracksDetails = async (trackIds) => {\r\n        try {\r\n            const response = await axios.get(`https://www.googleapis.com/youtube/v3/videos`, {\r\n                params: {\r\n                    part: 'snippet',\r\n                    id: trackIds.join(','),\r\n                    key: 'AIzaSyCNaJfGAy9a8LlB8B_A3jSRlNxpq4jsCAI' // Замените на ваш API ключ\r\n                }\r\n            });\r\n            setMyMusicTracks(response.data.items);\r\n        } catch (error) {\r\n            console.error('Error fetching track details from YouTube', error);\r\n        }\r\n    };\r\n\r\n    const handleSearch = async (query) => {\r\n        try {\r\n            const response = await axios.get(`https://www.googleapis.com/youtube/v3/search`, {\r\n                params: {\r\n                    part: 'snippet',\r\n                    q: query,\r\n                    type: 'video',\r\n                    videoCategoryId: '10',\r\n                    maxResults: 15,\r\n                    key: 'AIzaSyCNaJfGAy9a8LlB8B_A3jSRlNxpq4jsCAI' // Замените на ваш API ключ\r\n                }\r\n            });\r\n            setSearchTracks(response.data.items);\r\n        } catch (error) {\r\n            console.error('Error fetching search results', error);\r\n        }\r\n    };\r\n\r\n    const handlePlay = (index, isSearch, isMyMusic) => {\r\n        let track;\r\n        if (isMyMusic) {\r\n            track = myMusicTracks[index];\r\n        } else {\r\n            track = isSearch ? searchTracks[index] : recommendedTracks[index];\r\n        }\r\n\r\n        if (track) {\r\n            const videoId = track.id.videoId || track.id;\r\n            const title = track.snippet.title;\r\n            const artist = track.snippet.channelTitle;\r\n            setTrack({ videoId, title, artist });\r\n        }\r\n    };\r\n\r\n    const handleAddToMyMusic = async (track) => {\r\n        try {\r\n            // Получение пользователя\r\n            const { data: { user } } = await supabase.auth.getUser();\r\n            if (!user) {\r\n                console.error('User not found');\r\n                return;\r\n            }\r\n\r\n            // Получение текущих идентификаторов треков \"Моей музыки\"\r\n            const { data, error } = await supabase\r\n                .from('users_public_information')\r\n                .select('my_music')\r\n                .eq('auth_id', user.id)\r\n                .single();\r\n\r\n            if (error) {\r\n                console.error('Error fetching my music from Supabase:', error);\r\n                return;\r\n            }\r\n\r\n            const currentMusicIds = data?.my_music || [];\r\n            const videoId = track.id.videoId || track.id;\r\n            const trackExists = currentMusicIds.includes(videoId);\r\n\r\n            if (trackExists) {\r\n                console.warn('Track already exists in \"My Music\"');\r\n                return;\r\n            }\r\n\r\n            // Добавление нового идентификатора трека\r\n            const updatedMusicIds = [...currentMusicIds, videoId];\r\n\r\n            // Обновление записи в Supabase\r\n            const { error: updateError } = await supabase\r\n                .from('users_public_information')\r\n                .update({ my_music: updatedMusicIds })\r\n                .eq('auth_id', user.id);\r\n\r\n            if (updateError) {\r\n                console.error('Error updating my music in Supabase:', updateError);\r\n            } else {\r\n                setMyMusicIds(updatedMusicIds);\r\n                fetchTracksDetails(updatedMusicIds);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error adding track to my music', error);\r\n        }\r\n    };\r\n\r\n    const handleRemoveFromMyMusic = async (videoId) => {\r\n        try {\r\n            // Получение пользователя\r\n            const { data: { user } } = await supabase.auth.getUser();\r\n            if (!user) {\r\n                console.error('User not found');\r\n                return;\r\n            }\r\n\r\n            // Получение текущих идентификаторов треков \"Моей музыки\"\r\n            const { data, error } = await supabase\r\n                .from('users_public_information')\r\n                .select('my_music')\r\n                .eq('auth_id', user.id)\r\n                .single();\r\n\r\n            if (error) {\r\n                console.error('Error fetching my music from Supabase:', error);\r\n                return;\r\n            }\r\n\r\n            const currentMusicIds = data?.my_music || [];\r\n            const updatedMusicIds = currentMusicIds.filter(id => id !== videoId);\r\n\r\n            // Обновление записи в Supabase\r\n            const { error: updateError } = await supabase\r\n                .from('users_public_information')\r\n                .update({ my_music: updatedMusicIds })\r\n                .eq('auth_id', user.id);\r\n\r\n            if (updateError) {\r\n                console.error('Error updating my music in Supabase:', updateError);\r\n            } else {\r\n                setMyMusicIds(updatedMusicIds);\r\n                fetchTracksDetails(updatedMusicIds);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error removing track from my music', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={styles.App}>\r\n            <div className={styles.sectionSwitch}>\r\n                <button\r\n                    className={`${styles.button} ${currentSection === 'allMusic' ? styles.activeButton : ''}`}\r\n                    onClick={() => setCurrentSection('allMusic')}\r\n                >\r\n                    Вся музыка\r\n                </button>\r\n                <button\r\n                    className={`${styles.button} ${currentSection === 'myMusic' ? styles.activeButton : ''}`}\r\n                    onClick={() => setCurrentSection('myMusic')}\r\n                >\r\n                    Моя музыка\r\n                </button>\r\n            </div>\r\n\r\n            {currentSection === 'allMusic' && (\r\n                <>\r\n                    <SearchBar onSearch={handleSearch} placeholder=\"Поиск по названию трека или артисту\" />\r\n                    <TrackList\r\n                        tracks={searchTracks}\r\n                        onPlay={(index) => handlePlay(index, true, false)}\r\n                        title=\"Результаты поиска\"\r\n                        isSearchResults\r\n                        onAddToMyMusic={handleAddToMyMusic}\r\n                    />\r\n                    {isLoading ? (\r\n                        <div className={load.spinner}>\r\n                          <div></div>\r\n                          <div></div>\r\n                          <div></div>\r\n                        </div>\r\n                    ) : (\r\n                    <TrackList\r\n                        tracks={recommendedTracks}\r\n                        onPlay={(index) => handlePlay(index, false, false)}\r\n                        title=\"Рекомендации\"\r\n                    />\r\n                    )}\r\n                </>\r\n            )}\r\n\r\n            {currentSection === 'myMusic' && (\r\n                <TrackList\r\n                    tracks={myMusicTracks}\r\n                    title=\"Моя музыка\"\r\n                    onPlay={(index) => handlePlay(index, false, true)}\r\n                    onRemoveFromMyMusic={handleRemoveFromMyMusic}\r\n                    isMyMusic\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}