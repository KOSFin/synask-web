{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\player\\\\Documents\\\\GitHub\\\\synask-app\\\\src\\\\pages\\\\music\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport SearchBar from './SearchBar';\nimport TrackList from './TrackList';\nimport MusicPlayer from './MusicPlayer';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tracks, setTracks] = useState([]);\n  const [currentVideoId, setCurrentVideoId] = useState(null);\n  const handleSearch = async query => {\n    try {\n      const response = await axios.get(`https://www.googleapis.com/youtube/v3/search`, {\n        params: {\n          part: 'snippet',\n          q: query,\n          type: 'video',\n          videoCategoryId: '10',\n          // Category ID for Music\n          key: 'AIzaSyCNaJfGAy9a8LlB8B_A3jSRlNxpq4jsCAI'\n        }\n      });\n      setTracks(response.data.items);\n    } catch (error) {\n      console.error('Error fetching data from YouTube API', error);\n    }\n  };\n  const handlePlay = videoId => {\n    setCurrentVideoId(videoId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Music Player\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TrackList, {\n      tracks: tracks,\n      onPlay: handlePlay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MusicPlayer, {\n      videoId: currentVideoId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"mpyLAGfeIy4l9H/vfaZGjlGrC44=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","SearchBar","TrackList","MusicPlayer","jsxDEV","_jsxDEV","App","_s","tracks","setTracks","currentVideoId","setCurrentVideoId","handleSearch","query","response","get","params","part","q","type","videoCategoryId","key","data","items","error","console","handlePlay","videoId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","onPlay","_c","$RefreshReg$"],"sources":["C:/Users/player/Documents/GitHub/synask-app/src/pages/music/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport SearchBar from './SearchBar';\r\nimport TrackList from './TrackList';\r\nimport MusicPlayer from './MusicPlayer';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n    const [tracks, setTracks] = useState([]);\r\n    const [currentVideoId, setCurrentVideoId] = useState(null);\r\n\r\n    const handleSearch = async (query) => {\r\n        try {\r\n            const response = await axios.get(`https://www.googleapis.com/youtube/v3/search`, {\r\n                params: {\r\n                    part: 'snippet',\r\n                    q: query,\r\n                    type: 'video',\r\n                    videoCategoryId: '10', // Category ID for Music\r\n                    key: 'AIzaSyCNaJfGAy9a8LlB8B_A3jSRlNxpq4jsCAI'\r\n                }\r\n            });\r\n            setTracks(response.data.items);\r\n        } catch (error) {\r\n            console.error('Error fetching data from YouTube API', error);\r\n        }\r\n    };\r\n\r\n    const handlePlay = (videoId) => {\r\n        setCurrentVideoId(videoId);\r\n    };\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <h1>Music Player</h1>\r\n            <SearchBar onSearch={handleSearch} />\r\n            <TrackList tracks={tracks} onPlay={handlePlay} />\r\n            <MusicPlayer videoId={currentVideoId} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE1D,MAAMa,YAAY,GAAG,MAAOC,KAAK,IAAK;IAClC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,8CAA8C,EAAE;QAC7EC,MAAM,EAAE;UACJC,IAAI,EAAE,SAAS;UACfC,CAAC,EAAEL,KAAK;UACRM,IAAI,EAAE,OAAO;UACbC,eAAe,EAAE,IAAI;UAAE;UACvBC,GAAG,EAAE;QACT;MACJ,CAAC,CAAC;MACFZ,SAAS,CAACK,QAAQ,CAACQ,IAAI,CAACC,KAAK,CAAC;IAClC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;IAChE;EACJ,CAAC;EAED,MAAME,UAAU,GAAIC,OAAO,IAAK;IAC5BhB,iBAAiB,CAACgB,OAAO,CAAC;EAC9B,CAAC;EAED,oBACItB,OAAA;IAAKuB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChBxB,OAAA;MAAAwB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrB5B,OAAA,CAACJ,SAAS;MAACiC,QAAQ,EAAEtB;IAAa;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrC5B,OAAA,CAACH,SAAS;MAACM,MAAM,EAAEA,MAAO;MAAC2B,MAAM,EAAET;IAAW;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjD5B,OAAA,CAACF,WAAW;MAACwB,OAAO,EAAEjB;IAAe;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEd,CAAC;AAAC1B,EAAA,CAjCID,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAmCT,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}