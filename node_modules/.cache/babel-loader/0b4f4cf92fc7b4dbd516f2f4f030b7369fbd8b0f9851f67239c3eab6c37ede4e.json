{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\player\\\\Documents\\\\GitHub\\\\synask-app\\\\src\\\\pages\\\\music\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js (внутри Music)\nimport React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport SearchBar from './SearchBar';\nimport TrackList from './TrackList';\nimport './App.css';\nimport Header from '../../components/Header';\nimport { useTrack } from './TrackContext'; // Импортируйте useTrack\nimport AccentColorContext from '../settings/AccentColorContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tracks, setTracks] = useState([]);\n  const [currentTrackIndex, setCurrentTrackIndex] = useState(null);\n  const {\n    setTrack\n  } = useTrack(); // Получите функцию для обновления трека\n  const {\n    accentColor\n  } = useContext(AccentColorContext);\n  const handleSearch = async query => {\n    try {\n      const response = await axios.get(`https://www.googleapis.com/youtube/v3/search`, {\n        params: {\n          part: 'snippet',\n          q: query,\n          type: 'video',\n          videoCategoryId: '10',\n          key: 'AIzaSyCNaJfGAy9a8LlB8B_A3jSRlNxpq4jsCAI'\n        }\n      });\n      setTracks(response.data.items);\n      setCurrentTrackIndex(null);\n    } catch (error) {\n      console.error('Error fetching data from YouTube API', error);\n    }\n  };\n  const handlePlay = index => {\n    setCurrentTrackIndex(index);\n    const videoId = tracks[index].id.videoId;\n    const title = tracks[index].snippet.title;\n    const artist = tracks[index].snippet.channelTitle;\n    setTrack({\n      videoId,\n      title,\n      artist\n    }); // Обновите трек\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      style: {\n        borderColor: accentColor\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"sYnAsk Music Player\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n        onSearch: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TrackList, {\n        tracks: tracks,\n        onPlay: handlePlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"sp\",\n      children: \"\\u041E\\u0441\\u043D\\u043E\\u0432\\u0430\\u043D\\u043E \\u043D\\u0430 \\u0438\\u043D\\u0441\\u0442\\u0440\\u0443\\u043C\\u0435\\u043D\\u0442\\u0430\\u0445 api youtube.com\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"kjTriu8hCf/Vop83WvSgNwLixaM=\", false, function () {\n  return [useTrack];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useContext","axios","SearchBar","TrackList","Header","useTrack","AccentColorContext","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","tracks","setTracks","currentTrackIndex","setCurrentTrackIndex","setTrack","accentColor","handleSearch","query","response","get","params","part","q","type","videoCategoryId","key","data","items","error","console","handlePlay","index","videoId","id","title","snippet","artist","channelTitle","children","className","style","borderColor","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","onPlay","_c","$RefreshReg$"],"sources":["C:/Users/player/Documents/GitHub/synask-app/src/pages/music/App.js"],"sourcesContent":["// App.js (внутри Music)\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport SearchBar from './SearchBar';\r\nimport TrackList from './TrackList';\r\nimport './App.css';\r\nimport Header from '../../components/Header';\r\nimport { useTrack } from './TrackContext'; // Импортируйте useTrack\r\nimport AccentColorContext from '../settings/AccentColorContext';\r\n\r\nconst App = () => {\r\n    const [tracks, setTracks] = useState([]);\r\n    const [currentTrackIndex, setCurrentTrackIndex] = useState(null);\r\n    const { setTrack } = useTrack(); // Получите функцию для обновления трека\r\n    const { accentColor } = useContext(AccentColorContext);\r\n\r\n\r\n    const handleSearch = async (query) => {\r\n        try {\r\n            const response = await axios.get(`https://www.googleapis.com/youtube/v3/search`, {\r\n                params: {\r\n                    part: 'snippet',\r\n                    q: query,\r\n                    type: 'video',\r\n                    videoCategoryId: '10',\r\n                    key: 'AIzaSyCNaJfGAy9a8LlB8B_A3jSRlNxpq4jsCAI'\r\n                }\r\n            });\r\n            setTracks(response.data.items);\r\n            setCurrentTrackIndex(null);\r\n        } catch (error) {\r\n            console.error('Error fetching data from YouTube API', error);\r\n        }\r\n    };\r\n\r\n    const handlePlay = (index) => {\r\n        setCurrentTrackIndex(index);\r\n        const videoId = tracks[index].id.videoId;\r\n        const title = tracks[index].snippet.title;\r\n        const artist = tracks[index].snippet.channelTitle;\r\n        setTrack({ videoId, title, artist }); // Обновите трек\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"App\" style={{ borderColor: accentColor }}>\r\n                <h1>sYnAsk Music Player</h1>\r\n                <SearchBar onSearch={handleSearch} />\r\n                <TrackList tracks={tracks} onPlay={handlePlay} />\r\n            </div>\r\n            <p className=\"sp\">Основано на инструментах api youtube.com</p>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}