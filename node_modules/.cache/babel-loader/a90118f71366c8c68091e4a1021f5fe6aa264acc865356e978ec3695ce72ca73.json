{"ast":null,"code":"import getSupabaseClient from'../pages/config/SupabaseClient';const supabase=getSupabaseClient();export const checkSession=async(supabase,navigate)=>{try{const{data,error}=await supabase.auth.getUser();if(error){console.error('Error checking session:',error);return{authenticated:false,userId:null};}if(data){const{user}=data;const{data:techData,error:techError}=await supabase.from('_tech_').select('status_work, participants').eq('name','technical works').single();if(techError){console.error('Error fetching tech status:',techError);return{authenticated:false,userId:null};}const statusWork=techData===null||techData===void 0?void 0:techData.status_work;const participants=(techData===null||techData===void 0?void 0:techData.participants)||[];if(statusWork===0||statusWork===2||statusWork===3&&!participants.includes(user.id)){navigate('/info');return{authenticated:false,userId:null};}return{authenticated:true,userId:user.id};}return{authenticated:false,userId:null};}catch(error){console.error('Error during session check:',error);return{authenticated:false,userId:null};}};export const fetchInitialData=async(supabase,userId,setUserData,setFriends)=>{try{const{data:dataPub,error:errorPub}=await supabase.from('users_public_information').select('*').eq('auth_id',userId).single();if(errorPub)throw errorPub;if(!dataPub){window.location.href=\"/info\";return;}const{data:dataPriv,error:errorPriv}=await supabase.from('users_private_information').select('*').eq('auth_id',userId).single();if(errorPriv)throw errorPriv;const userData={auth_id:dataPub.auth_id,first_name:dataPub.first_name,last_name:dataPub.last_name,avatar_url:dataPub.avatar_url,status:dataPub.status,username:dataPub.username,contacts:dataPriv.contacts};setUserData(userData);const initialContacts=dataPriv.contacts||[];updateFriendsList(supabase,initialContacts,setFriends);return supabase.channel(\"user:\".concat(userId));}catch(error){console.error('Error fetching initial data:',error);return null;}};export const subscribeToUserDataChanges=(supabase,userId,setUserData,setFriends)=>{const handleUserDataChange=payload=>{if(payload.new.contacts){setUserData(prev=>({...prev,...payload.new}));updateFriendsList(supabase,payload.new.contacts,setFriends);}else{setUserData(prev=>({...prev,...payload.new}));}};const userChannel=supabase.channel(\"user:\".concat(userId)).on('postgres_changes',{event:'UPDATE',schema:'public',table:'users_public_information',filter:\"auth_id=eq.\".concat(userId)},handleUserDataChange).on('postgres_changes',{event:'UPDATE',schema:'public',table:'users_private_information',filter:\"auth_id=eq.\".concat(userId)},handleUserDataChange).subscribe();return()=>supabase.removeChannel(userChannel);};const updateFriendsList=async(supabase,contacts,setFriends)=>{try{if(contacts.length===0){setFriends([]);return;}const{data,error}=await supabase.from('users_public_information').select('auth_id, username, first_name, last_name, avatar_url, cover_url, status, tags').in('auth_id',contacts);if(error){console.error('Error fetching friends data:',error);return;}setFriends(data||[]);}catch(error){console.error('Error updating friends list:',error);}};export const deleteChatById=async chatId=>{try{// Удаляем чат из базы данных\nconst{data,error}=await supabase.from('chats').delete().eq('id',chatId);if(error){// Если произошла ошибка, возвращаем её\nreturn{success:false,error};}// Возвращаем успешный результат, если нет ошибок\nreturn{success:true,data};}catch(error){// Ловим любые исключения и возвращаем ошибку\nreturn{success:false,error};}};// Удаление сообщения по ID\nexport const deleteMessageById=async messageId=>{try{const{data,error}=await supabase.from('messages').delete().eq('id',messageId);if(error){return{success:false,error};}return{success:true,data};}catch(error){return{success:false,error};}};// Обновление сообщения по ID\nexport const updateMessageById=async(messageId,newContent)=>{try{const{data,error}=await supabase.from('messages').update({content:newContent}).eq('id',messageId);if(error){return{success:false,error};}return{success:true,data};}catch(error){return{success:false,error};}};","map":{"version":3,"names":["getSupabaseClient","supabase","checkSession","navigate","data","error","auth","getUser","console","authenticated","userId","user","techData","techError","from","select","eq","single","statusWork","status_work","participants","includes","id","fetchInitialData","setUserData","setFriends","dataPub","errorPub","window","location","href","dataPriv","errorPriv","userData","auth_id","first_name","last_name","avatar_url","status","username","contacts","initialContacts","updateFriendsList","channel","concat","subscribeToUserDataChanges","handleUserDataChange","payload","new","prev","userChannel","on","event","schema","table","filter","subscribe","removeChannel","length","in","deleteChatById","chatId","delete","success","deleteMessageById","messageId","updateMessageById","newContent","update","content"],"sources":["C:/Users/player/Documents/GitHub/synask-app/src/components/utils.js"],"sourcesContent":["import getSupabaseClient from '../pages/config/SupabaseClient';\r\n\r\nconst supabase = getSupabaseClient();\r\n\r\nexport const checkSession = async (supabase, navigate) => {\r\n    try {\r\n        const { data, error } = await supabase.auth.getUser();\r\n        if (error) {\r\n            console.error('Error checking session:', error);\r\n            return { authenticated: false, userId: null };\r\n        }\r\n\r\n        if (data) {\r\n            const { user } = data;\r\n            const { data: techData, error: techError } = await supabase\r\n                .from('_tech_')\r\n                .select('status_work, participants')\r\n                .eq('name', 'technical works')\r\n                .single();\r\n\r\n            if (techError) {\r\n                console.error('Error fetching tech status:', techError);\r\n                return { authenticated: false, userId: null };\r\n            }\r\n\r\n            const statusWork = techData?.status_work;\r\n            const participants = techData?.participants || [];\r\n\r\n            if (statusWork === 0 || statusWork === 2 || (statusWork === 3 && !participants.includes(user.id))) {\r\n                navigate('/info');\r\n                return { authenticated: false, userId: null };\r\n            }\r\n\r\n            return { authenticated: true, userId: user.id };\r\n        }\r\n\r\n        return { authenticated: false, userId: null };\r\n    } catch (error) {\r\n        console.error('Error during session check:', error);\r\n        return { authenticated: false, userId: null };\r\n    }\r\n};\r\n\r\nexport const fetchInitialData = async (supabase, userId, setUserData, setFriends) => {\r\n    try {\r\n        const { data: dataPub, error: errorPub } = await supabase\r\n            .from('users_public_information')\r\n            .select('*')\r\n            .eq('auth_id', userId)\r\n            .single();\r\n\r\n        if (errorPub) throw errorPub;\r\n        if (!dataPub) {\r\n            window.location.href = \"/info\";\r\n            return;\r\n        }\r\n\r\n        const { data: dataPriv, error: errorPriv } = await supabase\r\n            .from('users_private_information')\r\n            .select('*')\r\n            .eq('auth_id', userId)\r\n            .single();\r\n\r\n        if (errorPriv) throw errorPriv;\r\n\r\n        const userData = {\r\n            auth_id: dataPub.auth_id,\r\n            first_name: dataPub.first_name,\r\n            last_name: dataPub.last_name,\r\n            avatar_url: dataPub.avatar_url,\r\n            status: dataPub.status,\r\n            username: dataPub.username,\r\n            contacts: dataPriv.contacts\r\n        };\r\n        setUserData(userData);\r\n\r\n        const initialContacts = dataPriv.contacts || [];\r\n        updateFriendsList(supabase, initialContacts, setFriends);\r\n        return supabase.channel(`user:${userId}`);\r\n    } catch (error) {\r\n        console.error('Error fetching initial data:', error);\r\n        return null;\r\n    }\r\n};\r\n\r\nexport const subscribeToUserDataChanges = (supabase, userId, setUserData, setFriends) => {\r\n    const handleUserDataChange = (payload) => {\r\n        if (payload.new.contacts) {\r\n            setUserData(prev => ({\r\n                ...prev,\r\n                ...payload.new\r\n            }));\r\n            updateFriendsList(supabase, payload.new.contacts, setFriends);\r\n        } else {\r\n            setUserData(prev => ({\r\n                ...prev,\r\n                ...payload.new\r\n            }));\r\n        }\r\n    };\r\n\r\n    const userChannel = supabase\r\n        .channel(`user:${userId}`)\r\n        .on(\r\n            'postgres_changes',\r\n            { event: 'UPDATE', schema: 'public', table: 'users_public_information', filter: `auth_id=eq.${userId}` },\r\n            handleUserDataChange\r\n        )\r\n        .on(\r\n            'postgres_changes',\r\n            { event: 'UPDATE', schema: 'public', table: 'users_private_information', filter: `auth_id=eq.${userId}` },\r\n            handleUserDataChange\r\n        )\r\n        .subscribe();\r\n\r\n    return () => supabase.removeChannel(userChannel);\r\n};\r\n\r\nconst updateFriendsList = async (supabase, contacts, setFriends) => {\r\n    try {\r\n        if (contacts.length === 0) {\r\n            setFriends([]);\r\n            return;\r\n        }\r\n\r\n        const { data, error } = await supabase\r\n            .from('users_public_information')\r\n            .select('auth_id, username, first_name, last_name, avatar_url, cover_url, status, tags')\r\n            .in('auth_id', contacts);\r\n\r\n        if (error) {\r\n            console.error('Error fetching friends data:', error);\r\n            return;\r\n        }\r\n\r\n        setFriends(data || []);\r\n    } catch (error) {\r\n        console.error('Error updating friends list:', error);\r\n    }\r\n};\r\n\r\nexport const deleteChatById = async (chatId) => {\r\n    try {\r\n        // Удаляем чат из базы данных\r\n        const { data, error } = await supabase\r\n            .from('chats')\r\n            .delete()\r\n            .eq('id', chatId);\r\n\r\n        if (error) {\r\n            // Если произошла ошибка, возвращаем её\r\n            return { success: false, error };\r\n        }\r\n\r\n        // Возвращаем успешный результат, если нет ошибок\r\n        return { success: true, data };\r\n    } catch (error) {\r\n        // Ловим любые исключения и возвращаем ошибку\r\n        return { success: false, error };\r\n    }\r\n};\r\n\r\n// Удаление сообщения по ID\r\nexport const deleteMessageById = async (messageId) => {\r\n    try {\r\n        const { data, error } = await supabase\r\n            .from('messages')\r\n            .delete()\r\n            .eq('id', messageId);\r\n\r\n        if (error) {\r\n            return { success: false, error };\r\n        }\r\n\r\n        return { success: true, data };\r\n    } catch (error) {\r\n        return { success: false, error };\r\n    }\r\n};\r\n\r\n// Обновление сообщения по ID\r\nexport const updateMessageById = async (messageId, newContent) => {\r\n    try {\r\n        const { data, error } = await supabase\r\n            .from('messages')\r\n            .update({ content: newContent })\r\n            .eq('id', messageId);\r\n\r\n        if (error) {\r\n            return { success: false, error };\r\n        }\r\n\r\n        return { success: true, data };\r\n    } catch (error) {\r\n        return { success: false, error };\r\n    }\r\n};\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}