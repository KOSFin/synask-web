{"ast":null,"code":"import { AuthDataService } from './authDataService.js';\nimport { ConfigAuthMode } from '../core/config/types.js';\nimport { isDomainAllowed } from '../utils/domain.js';\nimport { getRedirectWithPayloadUrl, getVKIDUrl } from '../utils/url.js';\nimport { uuid } from '../utils/uuid.js';\nimport { AUTH_VK_CONNECT_RESPONSE, AUTH_RESPONSE_TOKEN } from './constants.js';\nclass Auth {\n  /**\n  * @ignore\n  */\n  static __config;\n  uuid;\n  dataService;\n  opener;\n  interval;\n  close = () => {\n    this.opener && this.opener.close();\n  };\n  handleMessage = ({\n    origin,\n    source,\n    data\n  }) => {\n    if (source !== this.opener || !this.opener || !isDomainAllowed(origin)) {\n      return;\n    }\n    this.unsubscribe();\n    if (data.payload.error) {\n      this.dataService.sendAuthorizationFailed(data.payload.error);\n      return;\n    }\n    if (data.action === AUTH_VK_CONNECT_RESPONSE + this.uuid) {\n      this.dataService.sendSuccessData(data.payload);\n      return;\n    }\n    this.dataService.sendEventNotSupported();\n  };\n  handleInterval = () => {\n    if (this.opener?.closed) {\n      this.unsubscribe();\n      this.dataService.sendNewTabHasBeenClosed();\n    }\n  };\n  subscribe = () => {\n    this.interval = window.setInterval(this.handleInterval, 1000);\n    window.addEventListener('message', this.handleMessage);\n    this.dataService.removeCallback();\n  };\n  unsubscribe = () => {\n    window.removeEventListener('message', this.handleMessage);\n    clearInterval(this.interval);\n    this.dataService.setCallback(this.close);\n  };\n  loginInNewTab = url => {\n    this.dataService = new AuthDataService();\n    this.opener = window.open(url, '_blank');\n    if (this.opener) {\n      this.subscribe();\n    } else {\n      this.dataService.sendCannotCreateNewTab();\n    }\n    this.dataService.value.then(payload => {\n      this.redirectWithPayload(payload);\n    }).catch(console.error);\n  };\n  loginByRedirect = url => {\n    location.assign(url);\n  };\n  login = params => {\n    const config = Auth.__config.get();\n    this.uuid = uuid();\n    const queryParams = {\n      uuid: this.uuid,\n      lang_id: params?.lang,\n      scheme: params?.scheme,\n      screen: params?.screen,\n      response_type: AUTH_RESPONSE_TOKEN,\n      action: params?.action ? btoa(JSON.stringify(params.action)) : undefined\n    };\n    const getUrl = () => getVKIDUrl('auth', queryParams, config);\n    if (config.mode === ConfigAuthMode.InNewTab) {\n      queryParams.origin = location.protocol + '//' + location.hostname;\n      this.loginInNewTab(getUrl());\n    } else {\n      this.loginByRedirect(getUrl());\n    }\n  };\n  // TODO: добавить типы\n  redirectWithPayload(payload) {\n    location.assign(getRedirectWithPayloadUrl(payload, Auth.__config));\n  }\n}\nexport { Auth };","map":{"version":3,"names":["AuthDataService","ConfigAuthMode","isDomainAllowed","getRedirectWithPayloadUrl","getVKIDUrl","uuid","AUTH_VK_CONNECT_RESPONSE","AUTH_RESPONSE_TOKEN","Auth","__config","dataService","opener","interval","close","handleMessage","origin","source","data","unsubscribe","payload","error","sendAuthorizationFailed","action","sendSuccessData","sendEventNotSupported","handleInterval","closed","sendNewTabHasBeenClosed","subscribe","window","setInterval","addEventListener","removeCallback","removeEventListener","clearInterval","setCallback","loginInNewTab","url","open","sendCannotCreateNewTab","value","then","redirectWithPayload","catch","console","loginByRedirect","location","assign","login","params","config","get","queryParams","lang_id","lang","scheme","screen","response_type","btoa","JSON","stringify","undefined","getUrl","mode","InNewTab","protocol","hostname"],"sources":["C:/Users/player/Documents/GitHub/synask-app/node_modules/@vkid/sdk/dist-sdk/esm/auth/auth.js"],"sourcesContent":["import { AuthDataService } from './authDataService.js';\nimport { ConfigAuthMode } from '../core/config/types.js';\nimport { isDomainAllowed } from '../utils/domain.js';\nimport { getRedirectWithPayloadUrl, getVKIDUrl } from '../utils/url.js';\nimport { uuid } from '../utils/uuid.js';\nimport { AUTH_VK_CONNECT_RESPONSE, AUTH_RESPONSE_TOKEN } from './constants.js';\n\nclass Auth {\n    /**\n   * @ignore\n   */ static __config;\n    uuid;\n    dataService;\n    opener;\n    interval;\n    close = ()=>{\n        this.opener && this.opener.close();\n    };\n    handleMessage = ({ origin, source, data })=>{\n        if (source !== this.opener || !this.opener || !isDomainAllowed(origin)) {\n            return;\n        }\n        this.unsubscribe();\n        if (data.payload.error) {\n            this.dataService.sendAuthorizationFailed(data.payload.error);\n            return;\n        }\n        if (data.action === AUTH_VK_CONNECT_RESPONSE + this.uuid) {\n            this.dataService.sendSuccessData(data.payload);\n            return;\n        }\n        this.dataService.sendEventNotSupported();\n    };\n    handleInterval = ()=>{\n        if (this.opener?.closed) {\n            this.unsubscribe();\n            this.dataService.sendNewTabHasBeenClosed();\n        }\n    };\n    subscribe = ()=>{\n        this.interval = window.setInterval(this.handleInterval, 1000);\n        window.addEventListener('message', this.handleMessage);\n        this.dataService.removeCallback();\n    };\n    unsubscribe = ()=>{\n        window.removeEventListener('message', this.handleMessage);\n        clearInterval(this.interval);\n        this.dataService.setCallback(this.close);\n    };\n    loginInNewTab = (url)=>{\n        this.dataService = new AuthDataService();\n        this.opener = window.open(url, '_blank');\n        if (this.opener) {\n            this.subscribe();\n        } else {\n            this.dataService.sendCannotCreateNewTab();\n        }\n        this.dataService.value.then((payload)=>{\n            this.redirectWithPayload(payload);\n        }).catch(console.error);\n    };\n    loginByRedirect = (url)=>{\n        location.assign(url);\n    };\n    login = (params)=>{\n        const config = Auth.__config.get();\n        this.uuid = uuid();\n        const queryParams = {\n            uuid: this.uuid,\n            lang_id: params?.lang,\n            scheme: params?.scheme,\n            screen: params?.screen,\n            response_type: AUTH_RESPONSE_TOKEN,\n            action: params?.action ? btoa(JSON.stringify(params.action)) : undefined\n        };\n        const getUrl = ()=>getVKIDUrl('auth', queryParams, config);\n        if (config.mode === ConfigAuthMode.InNewTab) {\n            queryParams.origin = location.protocol + '//' + location.hostname;\n            this.loginInNewTab(getUrl());\n        } else {\n            this.loginByRedirect(getUrl());\n        }\n    };\n    // TODO: добавить типы\n    redirectWithPayload(payload) {\n        location.assign(getRedirectWithPayloadUrl(payload, Auth.__config));\n    }\n}\n\nexport { Auth };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}